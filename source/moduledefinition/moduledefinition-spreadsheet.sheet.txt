
=== Sheet Bindings =====================================

 -- Row 1 -----------------------------------
  Binding Name = ModuleDefinitionParameterType
  Binding = value set
  Reference = http://hl7.org/fhir/ValueSet/operation-parameter-type
  Definition = The type of the parameter
  Conformance = required

 -- Row 2 -----------------------------------
  Binding Name = ModuleDefinitionParameterUse
  Binding = value set
  Reference = http://hl7.org/fhir/ValueSet/operation-parameter-use
  Definition = Whether the parameter is input or output
  Conformance = required

=== Sheet Invariants =====================================

=== Sheet Data Elements =====================================

 -- Row 1 -----------------------------------
  Element = ModuleDefinition
  Type = DomainResource
  Short Label = Defines the data requirements information for a quality artifact
  Definition = The ModuleDefinition resource defines the data requirements for a quality artifact
  w5 = clinical.general

 -- Row 2 -----------------------------------
  Element = ModuleDefinition.identifier
  Card. = 0..*
  Summary = Y
  Type = Identifier
  Short Label = Logical identifier
  Definition = A logical identifier for the module such as the CMS or NQF identifiers for a measure artifact
  w5 = id

 -- Row 3 -----------------------------------
  Element = ModuleDefinition.version
  Card. = 0..1
  Summary = Y
  Type = string
  Short Label = The version of the module, if any
  Definition = The version of the module, if any. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge modules, refer to the Decision Support Service specification

 -- Row 4 -----------------------------------
  Element = ModuleDefinition.model
  Card. = 0..*
  Definition = A model reference used by the content

 -- Row 5 -----------------------------------
  Element = ModuleDefinition.model.name
  Card. = 0..1
  Type = string
  Definition = The name of the model

 -- Row 6 -----------------------------------
  Element = ModuleDefinition.model.identifier
  Card. = 1..1
  Type = string
  Definition = The identifier of the model

 -- Row 7 -----------------------------------
  Element = ModuleDefinition.model.version
  Card. = 0..1
  Type = string
  Definition = The version of the model

 -- Row 8 -----------------------------------
  Element = ModuleDefinition.library
  Card. = 0..*
  Short Label = A library referenced by the module
  Definition = A library referenced by the module. The reference must consist of either an id, or a document reference

 -- Row 9 -----------------------------------
  Element = ModuleDefinition.library.name
  Card. = 0..1
  Type = string
  Short Label = The local name for the library
  Definition = The local name for the library reference. If no local name is provided, the name of the referenced library is assumed

 -- Row 10 -----------------------------------
  Element = ModuleDefinition.library.identifier
  Card. = 0..1
  Type = string
  Definition = The identifier of the library

 -- Row 11 -----------------------------------
  Element = ModuleDefinition.library.version
  Card. = 0..1
  Type = string
  Definition = The version of the library

 -- Row 12 -----------------------------------
  Element = ModuleDefinition.library.document[x]
  Card. = 0..1
  Type = Attachment|Reference(ModuleDefinition)
  Definition = A reference to the library

 -- Row 13 -----------------------------------
  Element = ModuleDefinition.codeSystem
  Card. = 0..*
  Definition = A code system definition used within the knowledge module

 -- Row 14 -----------------------------------
  Element = ModuleDefinition.codeSystem.name
  Card. = 1..1
  Type = string
  Definition = The local name for the code system

 -- Row 15 -----------------------------------
  Element = ModuleDefinition.codeSystem.identifier
  Card. = 1..1
  Type = string
  Definition = The code system uri

 -- Row 16 -----------------------------------
  Element = ModuleDefinition.codeSystem.version
  Card. = 0..1
  Type = string
  Definition = The code system version, if any

 -- Row 17 -----------------------------------
  Element = ModuleDefinition.valueSet
  Card. = 0..*
  Definition = A value set definition used by the knowledge module

 -- Row 18 -----------------------------------
  Element = ModuleDefinition.valueSet.name
  Card. = 1..1
  Type = string
  Definition = The local name for the value set

 -- Row 19 -----------------------------------
  Element = ModuleDefinition.valueSet.identifier
  Card. = 1..1
  Type = string
  Definition = The value set uri

 -- Row 20 -----------------------------------
  Element = ModuleDefinition.valueSet.version
  Card. = 0..1
  Type = string
  Definition = The version of the value set, if any

 -- Row 21 -----------------------------------
  Element = ModuleDefinition.valueSet.codeSystem
  Card. = 0..*
  Type = string
  Definition = The code systems in use within the value set. These must refer to previously defined code systems within this knowledge module or a referenced library

 -- Row 22 -----------------------------------
  Element = ModuleDefinition.parameter
  Card. = 0..*
  Definition = Parameters to the module

 -- Row 23 -----------------------------------
  Element = ModuleDefinition.parameter.name
  Card. = 1..1
  Type = code
  Binding = !
  Definition = The name of the parameter

 -- Row 24 -----------------------------------
  Element = ModuleDefinition.parameter.use
  Card. = 1..1
  Type = code
  Binding = ModuleDefinitionParameterUse
  Definition = Whether the parameter is input or output for the module

 -- Row 25 -----------------------------------
  Element = ModuleDefinition.parameter.documentation
  Card. = 0..1
  Type = string
  Definition = A brief description of the parameter

 -- Row 26 -----------------------------------
  Element = ModuleDefinition.parameter.type
  Card. = 1..1
  Type = code
  Binding = ModuleDefinitionParameterType
  Definition = The type of the parameter

 -- Row 27 -----------------------------------
  Element = ModuleDefinition.parameter.profile
  Card. = 0..1
  Type = Reference(StructureDefinition)
  Definition = The profile of the parameter, if any

 -- Row 28 -----------------------------------
  Element = ModuleDefinition.data
  Card. = 0..*
  Short Label = Describes a required data item
  Definition = Describes a required data item for evaluation in terms of the type of data, and optional code- or date-based filters of the data

 -- Row 29 -----------------------------------
  Element = ModuleDefinition.data.type
  Card. = 1..1
  Type = code
  Binding = ModuleDefinitionParameterType
  Short Label = The type of the required data
  Definition = The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile

 -- Row 30 -----------------------------------
  Element = ModuleDefinition.data.profile
  Card. = 0..1
  Type = Reference(StructureDefinition)
  Short Label = The profile of the required data
  Definition = The profile of the required data, specified as the uri of the profile definition

 -- Row 31 -----------------------------------
  Element = ModuleDefinition.data.mustSupport
  Card. = 0..*
  Type = string
  Short Label = Indicates that specific structure elements are referenced by the knowledge module
  Definition = Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available

 -- Row 32 -----------------------------------
  Element = ModuleDefinition.data.codeFilter
  Card. = 0..*
  Definition = Code filters for the required data, if any

 -- Row 33 -----------------------------------
  Element = ModuleDefinition.data.codeFilter.path
  Card. = 1..1
  Type = string
  Short Label = The code-valued attribute of the filter
  Definition = The code-valued attribute of the filter. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index must be an integer constant. The path must resolve to an element of type code, Coding, or CodeableConcept

 -- Row 34 -----------------------------------
  Element = ModuleDefinition.data.codeFilter.valueSet[x]
  Card. = 0..1
  Type = string|Reference(ValueSet)
  Short Label = The valueset for the code filter
  Definition = The valueset for the code filter. The valueSet or codeableConcept elements are exclusive. If valueSet is specified, the filter will return only those data items for which the value of the code-valued element specified in the path is a member of the specified valueset

 -- Row 35 -----------------------------------
  Element = ModuleDefinition.data.codeFilter.codeableConcept
  Card. = 0..*
  Type = CodeableConcept
  Short Label = The codeableConcepts for the filter
  Definition = The codeable concept for the code filter. Only one of valueSet or codeableConcept may be specified. If codeableConcepts are given, the filter will return only those data items for which the code-valued attribute specified by the path has a value that is one of the specified codeable concepts

 -- Row 36 -----------------------------------
  Element = ModuleDefinition.data.dateFilter
  Card. = 0..*
  Definition = Date filters for the required data, if any

 -- Row 37 -----------------------------------
  Element = ModuleDefinition.data.dateFilter.path
  Card. = 1..1
  Type = string
  Short Label = The date-valued attribute of the filter
  Definition = The date-valued attribute of the filter. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index must be an integer constant. The path must resolve to an element of type dateTime, Period, Schedule, or Timing

 -- Row 38 -----------------------------------
  Element = ModuleDefinition.data.dateFilter.value[x]
  Card. = 0..1
  Type = dateTime|Period
  Short Label = The value of the filter, as a Period or dateTime value
  Definition = The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime

=== Sheet Search =====================================

=== Sheet Profiles =====================================

=== Sheet Examples =====================================

=== Sheet Examples =====================================
