<Profile xmlns="http://hl7.org/fhir" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://hl7.org/fhir ../../schema/profile.xsd">
  <!-- text will be generated by bild program -->
  
  <url value="http://ihc.org/fhir/Profile/StandardLabObsQuantitative"/>
  <!-- stuff from metadata of CDL -->
  <version value="6.6"/>
  <name value="StandardLabObsQuantitative"/>
  <publisher value="IHC"/>
  <description value="StandardLabObsQuantitative is the Clinical Element Model for standard laboratory test results/observations such as hematology, chemistry, coagulation, serology and blood bank.  This model will not be used for microbiology and anatomic pathology data"/>
  <status value="active"/>
  <experimental value="false"/>
  <date value="2008-11-17"/>

  <mapping>
    <!-- set up a formal mapping for the CDL Keys -->
    <identity value="cdl.key"/>
    <uri value="http://clinicalelement.com/cdl/key"/>
    <name value="CEM Key for the element"/>
  </mapping>
  
  <structure>
    <!-- this is a profile on Observation -->
    <type value="Observation"/>
    
    <!-- this is deried from the StandardLabObs -->
    <base value="http://ihc.org/fhir/Profile/StandardLabObs#StandardLabObs"/> 

    <!-- actually, this name is useless, but it's here right now as a publishing requirement (tooling limtiation to be addressed -->
    <name value="StandardLabObsQuantitative"/>
    
    <!-- this is the constraint the profile expresses publically. other constraint statements below (if any) are in support of this, and are not used directly -->
    <publish value="true"/>
    
    <!-- The infrastructure will generate the snapshot for us
    <snapshot/>
    -->
    
    <differential>
    
    <!-- 
     from the CDL - decisions about how to map 
      key domain(StandardLabObsQuantitative_KEY_VALUESET_ECID);                                          : Observation.name
      data PQ primaryPQValue unit.required unit.domain (UnitsOfMeasure_VALUESET_ECID)                    : Observation.value    
      alternate {                                      
        match CD secondaryCDValue code.card(1) code.domain(LaboratoryOrdinalValues_VALUESET_ECID);       : todo - what is this? 
        match CD altCDValue code.card(1) code.domain(LabValue_VALUESET_ECID);
        otherwise ST altSTValue;
      };
      qualifier ReferenceRangeNar referenceRangeNar card(0..1);                                          : Observation.ReferenceRange
      constraint primaryPQValue.isNullReasonCode.domain(LabNullFlavor_VALUESET_ECID);                    : Observation.value
      constraint abnormalInterpretation.CD.code.domain (AbnormalInterpretationNumericNom_VALUESET_ECID); : Observation.interpretation
      constraint deltaFlag.CD.code.domain (DeltaFlagNumericNom_VALUESET_ECID);                           : Observation.extension@deltaFlag
    -->
    
      <element>
        <path value="Observation"/>
      </element>

      <!-- need to narrow the binding of one of the extensions -->
      <element>
        <path value="Observation.extension"/>
        <name value="deltaFlag"/> 
        <definition>
          <binding>
            <name value="ReportingPriority_VALUESET_ECID"/>
            <isExtensible value="false"/>
            <referenceResource>  
              <reference value="ValueSet/AbnormalInterpretationNumericNom_VALUESET_ECID"/>
            </referenceResource>
          </binding>
        </definition>
      </element>      
      
      <element>
        <path value="Observation.name"/>
        <!-- all we do here is make the key binding -->
        <definition>
          <mapping>
            <identity value="cdl.key"/>
            <map value="StandardLabObsQuantitative_KEY_VALUESET_ECID"/>
          </mapping>
        </definition>
      </element>
      
      <element>
        <path value="Observation.value[x]"/>
        <!-- this can be one of 2 types: a code with a data null flavor, or a quantity. To enforce this, we're going to slice it  -->
        <slicing>
          <discriminator value="type"/> <!-- todo: how to slice on type -->
          <ordered value="false"/>
          <rules value="closed"/>
        </slicing>
        <definition>
          <max value="1"/> <!-- there can only be one of this slice - so it's going to be either of the two alternatives -->
        </definition>
      </element>
      
      <element>
        <path value="Observation.value[x]"/>
        <name value="null"/>
        <definition>
          <short value="When result is missing for some reason"/>
          <type>
            <code value="CodeableConcept"/>
          </type>
          <binding> 
            <name value="LabNullFlavor_VALUESET_ECID"/>
            <isExtensible value="false"/>
            <referenceResource>
              <reference value="ValueSet/LabNullFlavor_VALUESET_ECID"/>
            </referenceResource>
          </binding>
          <!-- this doesn't appear to have a key -->
        </definition>
      </element>
      
      <element>
        <path value="Observation.value[x]"/>
        <name value="non-null"/>
        <definition>
          <short value="When result is present"/>
          <type>
            <code value="Quantity"/>
          </type>
          <!-- this doesn't appear to have a key -->
        </definition>
      </element>
      
      <element>
        <path value="Observation.interpretation"/>
        <!-- all we do here is narrow the binding of interpretation code (again) -->
        <definition>
          <binding>
            <name value="CEM_Ordinal_And_Abnormal"/>
            <isExtensible value="false"/> 
            <referenceResource>
              <reference value="ValueSet/AbnormalInterpretation_KEY_ECID"/> <!-- todo: make this, and do the code mappings -->
            </referenceResource>
          </binding>
          <mapping>
            <identity value="cdl.key"/>
            <map value="AbnormalInterpretation_KEY_ECID"/>
          </mapping>
        </definition>
      </element>
      
      <element>
        <path value="Observation.referenceRange"/>
        <!-- todo: this is plain text, and OO haven't done the editorial work to enable plain text yet -->
      </element>

    </differential>
  </structure>

</Profile>

