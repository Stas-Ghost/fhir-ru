<div xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml ../../schema/fhir-xhtml.xsd" xmlns="http://www.w3.org/1999/xhtml">

<a name="interpretation"> </a>

<h2>Примечания к трактовке:<!-- Interpretation Notes: --></h2>

<ul>

<li>Структура представляется в виде линейного списка элементов. В <code>element.path</code> хранится вся общая структура целиком.<!-- A structure is represented as a flat list of elements. The <code>element.path</code> provides the overall structure. --></li>
<li>Differentials in constraints need only specify elements that they are making rules about. Other elements can be inferred as defined in the base resource</li>
<li>Elements specified in the differential (and all elements in the snapshot) must be ordered as such:<ul>
  <li>Elements from the baseDefinition appear before new elements in a specialization profile</li>
  <li>Elements must be in the same order as the baseDefinition, and child elements appear in depth-first order.</li>
  <li>Unsliced descendants of sliced elements appear before slices</li></ul>
 </li>
<li>Элементы <code>element.short</code>, <code>element.formal</code>, <code>element.comments</code> и <code>element.mapping</code> содержат конкретное определение соответствующего поля для определенного контекста.<!-- <code>element.short</code>, <code>element.formal</code>, <code>element.comments</code> and <code>element.mapping</code> provide the specific definition for the field in a specific context. --></li>
<li>В <code>element.type</code> перечисляются типы, которые могут использоваться для этого элемента. Если указано больше одного типа, значит в элементе предполагается выбор типа, и он должен иметь имя, заканчивающееся на "[x]". Окончание "[x]" сохраняется даже для тех имен элементов, максимальное число которых равно единице. <!-- <code>element.type</code> is used to specify which types may be used for this element. If there is more than one type, the element offers a choice of types and must have a name that terminates in "[x]". 
Names of elements that are choices retain the "[x]" in the name, even if a constraint on such an element limits the number of allowed types down to one. --></li>
<li>Когда для создания ограничений на взаимосвязи между содержимым описательной части и содержимым элементов данных используется xpath, то элемент, по отношению к которому выражено правило, и будет тем, о котором будет сообщаться в ошибке или предупреждении. 
<!-- When using xpath to make constraints about the relationship between the contents of the narrative and the contents of the data elements, the element against which the rule is expressed is the one against which the error or warning will be reported by a validator. --></li>
<li>When expression constraints are placed on elements that offer a choice of types, the expression has to select the type to which it applies using the <a href="http://hl7.org/fluentpath/#types">fluentpath <code>is</code> operator</a>.
<!-- When expression constraints are placed on elements that offer a choice of types, the expression has to select the type to which it applies using the <a href="http://hl7.org/fluentpath/#types">fluentpath <code>is</code> operator</a>. --></li>
<li>Для xpath-ограничений префикс "f" должен использоваться для "http://hl7.org/fhir", и "h" для "http://www.w3.org/1999/xhtml". XPath-ограничения пишутся для XML-представления
<!-- For xpath constraints, the prefix "f" should be used for "http://hl7.org/fhir", and "h" for "http://www.w3.org/1999/xhtml". XPath constraints are written against the XML representation --></li>
<li>Элемент condition используется для объявления о том, что ограничение, определенное на другом элементе, влияет на допустимое кардинальное число этого элемента.
<!-- The condition element is used to assert that a constraint defined on another element affects the allowed cardinality of this element. --></li>
</ul>

<h3>Варианты использования ресурса StructureDefinition<!-- Different uses for StructureDefinition --></h3>
<p>
Базовое структурное определение используется несколькими способами для поддержки спецификации FHIR. Варианты применения ресурса StructureDefinition настраиваются с помощью элементов <code>kind</code>, <code>constrainedType</code>, <code>base</code> и <code>url</code> по следующему основному шаблону:
<!-- The base structure definition is used in a number of different ways to support
the FHIR specification. The various uses of the StructureDefinition are 
controlled by the elements <code>kind</code>, <code>constrainedType</code>, <code>base</code>, and <code>url</code>,
using this basic pattern: -->
</p>
<pre class="json">
{
  "url": the identity of this structure definition,
  "kind": (datatype | resource),
  "type": the type being constrained (if it's a constraint)
  "baseDefinition": the structure definition from which this is derived
}
</pre>
<p>
Ниже приводится несколько примеров со ссылками на реальные случаи применения:
<!-- This list shows a number of examples, with links to real examples for each: -->
</p>
<ol>
<li>Базовое определение типа данных (пример: <a href="datatypes.html#Quantity">Quantity</a> - <a href="quantity.profile.xml.html">XML</a>, <a href="quantity.profile.json.html">JSON</a>):<br/>
<pre class="json" fragment="StructureDefinition">
{
  "resourceType": "StructureDefinition",
  "url": "http://hl7.org/fhir/StructureDefinition/Quantity",
  "name": "Quantity",
  "kind": "datatype",
  "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element"
}
</pre>
 </li>

 <li>Тип данных с ограничивающими условиями (пример: <a href="datatypes.html#Money">Money</a>  - <a href="money.profile.xml.html">XML</a>, <a href="money.profile.json.html">JSON</a>):<br/>
<pre class="json" fragment="StructureDefinition">
{
  "resourceType": "StructureDefinition",
  "url": "http://hl7.org/fhir/StructureDefinition/Money",
  "name": "Money",
  "kind": "datatype",
  "type": "Quantity",
  "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Quantity"
}
</pre>
	</li>

 <li>Базовое определение ресурса (пример: <a href="patient.html">Patient</a> - <a href="patient.profile.xml.html">XML</a>, <a href="patient.profile.json.html">JSON</a>): <br/>
<pre class="json" fragment="StructureDefinition">
{
  "resourceType": "StructureDefinition",
  "url": "http://hl7.org/fhir/StructureDefinition/Patient",
  "name": "Patient",
  "kind": "resource",
  "baseDefinition": "http://hl7.org/fhir/StructureDefinition/DomainResource"
}
</pre>
 </li>

 <li>Ограничивающее условие для ресурса (пример: <a href="clinicaldocument.html">Clinical Document Profile for Composition</a> - <a href="clinicaldocument.profile.xml.html">XML</a>, <a href="clinicaldocument.profile.json.html">JSON</a>): <br/>
<pre class="json" fragment="StructureDefinition">
{
  "resourceType": "StructureDefinition",
  "url": "http://hl7.org/fhir/StructureDefinition/clinicaldocument",
  "name": "Clinical Document Profile for Composition",
  "kind": "resource",
  "type": "Composition",
  "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Composition"
}
</pre>
 </li>

 <li>Базовое расширение (стандартный тип данных) (пример: <a href="extensibility.html#Extension">Extension</a> - <a href="extension.profile.xml.html">XML</a>, <a href="extension.profile.json.html">JSON</a>): <br/>
<pre class="json" fragment="StructureDefinition">
{
  "resourceType": "StructureDefinition",
  "url": "http://hl7.org/fhir/StructureDefinition/Extension",
  "name": "Extension",
  "kind": "datatype",
  "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element"
}
</pre>
 </li>

 <li>Заданное расширение (пример: <a href="extension-data-absent-reason.html">Extension Data Absent Reason</a>  - <a href="extension-data-absent-reason.xml.html">XML</a>, <a href="extension-data-absent-reason.json.html">JSON</a>): <br/>
<pre class="json" fragment="StructureDefinition">
{
  "resourceType": "StructureDefinition",
  "url": "http://hl7.org/fhir/StructureDefinition/data-absent-reason",
  "name": "Data Absent Reason",
  "kind": "complex-type",
  "type": "Extension",
  "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Extension"
}
</pre>
 </li>
 
 <li>Ограничивающее условие для заданного расширения (пока нет примеров): 
 <!-- A constraint on a defined extension (no examples currently defined):  --><br/>
<pre class="json" fragment="StructureDefinition">
{
  "resourceType": "StructureDefinition",
  "url": "http://example.org/fhir/StructureDefinition/race",
  "name": "Race codes used by institution (a subset of meaningful use codes)",
  "kind": "datatype",
  "type": "Extension",
  "baseDefinition": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-race"
}
</pre>
 </li>

</ol>

<p>
Первое, третье и пятое структурные определения в этом списке может задать только сама спецификация FHIR. Другие виды структурных определений созданы спецификацией, но могут быть созданы и самими реализаторами.
<!-- On this list, structure definitions of type 1, 3, and 5 can only be defined by the FHIR specification itself. The other kinds of structure definitions 
are (or may be) created by the specification, but can also be defined by other implementers. -->
</p>

<h3>Правила для структур ограничивающего типа  (Constrained Types)<!-- Rules for Constrained Types --></h3>
<p>
Когда структура является ограничением (constrainedType не "null"), то применяются правила, описанные в разделе <a href="profiling.html#resources">Extending and Restricting Resources</a>:
<!-- When the structure is a constraint (constrainedType is not null), see <a href="profiling.html#resources">Extending and Restricting Resources</a> for the rules that apply. -->
</p>
  
<h3>Распространенные адресаты мэппинга<!-- Common Mapping Targets --></h3>
<p>
В структурах есть возможность отображать элементы на концепты в других системах определений. Они, как правило, используются для отображения элементов на локальные модели реализации, пути данных и концепты. Однако они также используются для отображения на другие стандарты и опубликованные справочники. Вот стандартные URI распространённых объектов отображения:
<!-- Structures are able to map elements to concepts in other definition systems. Generally these are used to 
map the elements to local implementation models, data paths, and concepts. However they are also used to map
to other standards and published terminologies. These are the standard URIs used for common targets of the 
mapping: -->
</p>

[%mappings-table%]

<a name="logical"> </a>
<h3>Logical Models</h3>
<p>
StructureDefinitions are used to define the basic structures of FHIR: data types, resources, extensions, and profiles.
The same definition structure can also be used to define any arbitrary structures that are a directed acyclic graph
with typed nodes, where the primitive types are those defined by the FHIR specification.
</p>
<p>
This technique has many uses:
</p>
<ul>
 <li>Describing any arbitrary content model</li>
 <li>Describing existing HL7 content models (e.g. v2, CDA) using FHIR</li>
 <li>Describing common design patterns used in FHIR</li>
 <li>Defining a content model to support the mapping language</li>
</ul>
<!--
<h2>Profiled FHIR</h2>
<p>
If a profile is unambiguous, then the FHIR profile tooling (ref to be provided when the tooling exists) 
is able to generate reference implementation based object models that express 
the profiled model natively, where the object interface does not include 
prohibited elements, treats declared extensions as primary properties and 
slices lists according to the profile. This eases the burden on an implementer, 
though this object model can only be used with a sub-set of the possible resources. <!-.-only if it enforces maxOccurs.  Extra elements can be mapped into extensions -!->
</p>
<p>
The tooling is also able to generate bi-directional transforms between the 
<a href="formats.html">normal XML format</a> and an XML representation of this 
profiled object model and schema for this profiled XML representation. 
This XML form has extensions promoted into the primary XML form by using the 
extension code as the XML name and sliced lists are renamed to use the 
Profile.resource.element.name as the XML element name. Profiles are only suitable
for this use if they ensure that there are no clashing extension names when
the extension definition spaces are ignored and that the sliced list names are 
appropriate.<!-.- Any reason we limit this to only XML? - because transforms are XML things -!->
</p>

<p>
Implementations are allowed to exchange this profiled XML format. Implementations
that do so are not fully conformant to FHIR; instead they can claim to be conformant
to "Profiled FHIR". Implementations should consider carefully before adopting this 
approach; while it will reduce the amount of work required to initially implement 
particular profiles, it will increase the amount of work required to exchange this
data with other communities or to re-use tooling and applications that are also 
used in other contexts. This cost should particularly be considered in light of the
fact that the previously discussed tooling allows applications to be written as 
though they are dealing with "Profiled FHIR" instances when they are in fact sending
and receiving fully conformant FHIR instances.
</p>
-->

</div>
