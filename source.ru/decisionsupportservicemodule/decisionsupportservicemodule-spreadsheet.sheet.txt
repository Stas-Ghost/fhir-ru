
=== Sheet Bindings =====================================

 -- Row 1 -----------------------------------
  Binding Name = ModuleDefinitionParameterType
  Binding = value set
  Reference = http://hl7.org/fhir/ValueSet/operation-parameter-type
  Definition = The type of the parameter
  Conformance = required

 -- Row 2 -----------------------------------
  Binding Name = ModuleDefinitionParameterUse
  Binding = value set
  Reference = http://hl7.org/fhir/ValueSet/operation-parameter-use
  Definition = Whether the parameter is input or output
  Conformance = required

=== Sheet Invariants =====================================

=== Sheet Data Elements =====================================

 -- Row 1 -----------------------------------
  Element = DecisionSupportServiceModule
  Type = DomainResource
  Short Label = A description of decision support service functionality
  Definition = The DecisionSupportServiceModule resource describes decision support functionality that is available as a service
  w5 = clinical.general

 -- Row 2 -----------------------------------
  Element = !DecisionSupportServiceModule.identifier
  Card. = 0..*
  Summary = Y
  Type = Identifier
  Short Label = Logical identifier
  Definition = A logical identifier for the module such as the CMS or NQF identifiers for a measure artifact
  w5 = id

 -- Row 3 -----------------------------------
  Element = !DecisionSupportServiceModule.version
  Card. = 0..1
  Summary = Y
  Type = string
  Short Label = The version of the module, if any
  Definition = The version of the module, if any. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge modules, refer to the Decision Support Service specification

 -- Row 4 -----------------------------------
  Element = DecisionSupportServiceModule.moduleMetadata
  Card. = 0..1
  Type = ModuleMetadata
  Short Label = Metadata for the service module
  Definition = A reference to a ModuleMetadata resource describing the metadata for the decision support service module

 -- Row 5 -----------------------------------
  Element = DecisionSupportServiceModule.parameter
  Card. = 0..*
  Short Label = Parameters to the module
  Definition = The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse

 -- Row 6 -----------------------------------
  Element = DecisionSupportServiceModule.parameter.name
  Card. = 0..1
  Type = code
  Binding = !
  Short Label = Parameter name
  Definition = The name of the parameter

 -- Row 7 -----------------------------------
  Element = DecisionSupportServiceModule.parameter.use
  Card. = 1..1
  Type = code
  Binding = ModuleDefinitionParameterUse
  Definition = Whether the parameter is input or output for the module

 -- Row 8 -----------------------------------
  Element = DecisionSupportServiceModule.parameter.documentation
  Card. = 0..1
  Type = string
  Short Label = A brief description of the parameter
  Definition = A brief discussion of what the parameter is for and how it is used by the module

 -- Row 9 -----------------------------------
  Element = DecisionSupportServiceModule.parameter.type
  Card. = 1..1
  Type = code
  Binding = ModuleDefinitionParameterType
  Definition = The type of the parameter

 -- Row 10 -----------------------------------
  Element = DecisionSupportServiceModule.parameter.profile
  Card. = 0..1
  Type = Reference(StructureDefinition)
  Short Label = The profile of the parameter, any
  Definition = If specified, this indicates a profile that the input data must conform to, or that the output data will conform to

 -- Row 11 -----------------------------------
  Element = DecisionSupportServiceModule.parameter.mustSupport
  Card. = 0..*
  Type = string
  Short Label = Indicates that specific structure elements are referenced by the knowledge module
  Definition = Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available

 -- Row 12 -----------------------------------
  Element = DecisionSupportServiceModule.parameter.codeFilter
  Card. = 0..*
  Short Label = Code filters for the required data, if any
  Definition = Indicates that incoming data for this parameter is expected to match the given code filter. In other words, every instance should have a value for the path element that comes from the specified value set (or list of concepts)

 -- Row 13 -----------------------------------
  Element = DecisionSupportServiceModule.parameter.codeFilter.path
  Card. = 1..1
  Type = string
  Short Label = The code-valued attribute of the filter
  Definition = The code-valued attribute of the filter. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index must be an integer constant. The path must resolve to an element of type code, Coding, or CodeableConcept

 -- Row 14 -----------------------------------
  Element = DecisionSupportServiceModule.parameter.codeFilter.valueSet[x]
  Card. = 0..1
  Type = uri|Reference(ValueSet)
  Short Label = The valueset for the code filter
  Definition = The valueset for the code filter. The valueSet or codeableConcept elements are exclusive. If valueSet is specified, the filter will return only those data items for which the value of the code-valued element specified in the path is a member of the specified valueset

 -- Row 15 -----------------------------------
  Element = DecisionSupportServiceModule.parameter.codeFilter.codeableConcept
  Card. = 0..*
  Type = CodeableConcept
  Short Label = The codeableConcepts for the filter
  Definition = The codeable concept for the code filter. Only one of valueSet or codeableConcept may be specified. If codeableConcepts are given, the filter will return only those data items for which the code-valued attribute specified by the path has a value that is one of the specified codeable concepts

 -- Row 16 -----------------------------------
  Element = DecisionSupportServiceModule.parameter.dateFilter
  Card. = 0..*
  Short Label = Date filters for the required data, if any
  Definition = Indicates that incoming data for this parameter is expected to match the given date filter. In other words, every instance should have a value for the path element that is equal to the given datetime (or within the given Period)

 -- Row 17 -----------------------------------
  Element = DecisionSupportServiceModule.parameter.dateFilter.path
  Card. = 1..1
  Type = string
  Short Label = The date-valued attribute of the filter
  Definition = The date-valued attribute of the filter. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index must be an integer constant. The path must resolve to an element of type dateTime, Period, Schedule, or Timing

 -- Row 18 -----------------------------------
  Element = DecisionSupportServiceModule.parameter.dateFilter.value[x]
  Card. = 0..1
  Type = dateTime|Period
  Short Label = The value of the filter, as a Period or dateTime value
  Definition = The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime

=== Sheet Search =====================================

=== Sheet Profiles =====================================

=== Sheet Examples =====================================

=== Sheet Examples =====================================

 -- Row 1 -----------------------------------
  Name = evaluate
  Use = Instance
  Documentation = The evaluate operation requests clinical decision support guidance based on a specific decision support module
  Type = operation
  Example.Request = $evaluate-request.txt
  Example.Response = $evaluate-response.txt
  Title = Evaluate

 -- Row 2 -----------------------------------
  Name = evaluate.requestId
  Use = in
  Documentation = An optional client-provided identifier to track the request
  Type = code
  Min = 0
  Max = 1

 -- Row 3 -----------------------------------
  Name = evaluate.evaluateAtDateTime
  Use = in
  Documentation = An optional date and time specifying that the evaluation should be performed as thought it was the given date and time. The most direct implication of this is that references to \"Now\" within the evaluation logic of the module should result in this value. In addition, wherever possible, the data accessed by the module should appear as though it was accessed at this time. The evaluateAtDateTime value may be any time in the past or future, enabling both retrospective and prospective scenarios. If no value is provided, the date and time of the request is assumed
  Type = dateTime
  Min = 0
  Max = 1

 -- Row 4 -----------------------------------
  Name = evaluate.inputParameters
  Use = in
  Documentation = The input parameters for a request, if any. These parameters are defined by the module that is the target of the evaluation, and supply the input information to the module.
  Type = Parameters
  Min = 0
  Max = 1

 -- Row 5 -----------------------------------
  Name = evaluate.setting
  Use = in
  Documentation = The current setting of the request (inpatient, outpatient, etc)
  Type = CodeableConcept
  Min = 0
  Max = 1

 -- Row 6 -----------------------------------
  Name = evaluate.settingContext
  Use = in
  Documentation = Additional detail about the setting of the request, if any
  Type = CodeableConcept
  Min = 0
  Max = 1

 -- Row 7 -----------------------------------
  Name = evaluate.return
  Use = out
  Documentation = The result of the request as a GuidanceResponse resource. Output parameters, if any, will be contained in the parameters element of the response
  Type = GuidanceResponse
  Min = 1
  Max = 1
