<div xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml ../../schema/fhir-xhtml.xsd" xmlns="http://www.w3.org/1999/xhtml">

<h3>Примечания<!-- Notes --></h3>
<ul>
<li>
Концептуально, связка (bundle) - это список ресурсов с некоторым контекстом (называемый связями, и статус для записей) 
<!-- Conceptually, a bundle is a list of resources with some context (named links, and status on the entries) --></li>
<li>
Поскольку Bundle сам по себе является <a href="resource.html">ресурсом</a>, он имеет те же общие метаданные, что и все ресурсы, включая декларирование профилей, теги и метки уровня безопасности
<!-- Since a Bundle is itself a <a href="resource.html">Resource</a> it has the same common metadata as all resources, including profile assertions, tags, and security labels --></li>
</ul>

<h3>Разрешение ссылок в ресурсах Bundle<!-- Resolving references in Bundles --></h3>

<p>
У ресурса Bundle есть элемент 'base', который используется для разрешения относительных ссылок, присутствующих в связке ресурсов.
В случае, когда связка включает ресурсы с разными 'base'-элементами, каждая запись может также декларировать соответствующий base, если он отличается от общего 'base'-элемента. Элемент 'base' всегда ДОЛЖЕН быть указан либо в самом ресурсе Bundle, либо для каждой записи.
<!-- Bundle has a 'base' element, which is used to resolve relative references present in the bundled resources. 
In the case that the bundle includes resources with different bases, each entry can also assert it's 
applicable base if this is different to the overall base. A base SHOULD always be specified, either
in the bundle itself, or on each entry. -->
</p>
<p>
Приложения, выполняющие чтение связки, всегда должны сначала <a href="references.html#bundle-refs">искать ресурс</a> в связке по его идентификатору, прежде чем пытаться получить к нему доступ по его URL.
<!-- Applications reading a bundle should always <a href="references.html#bundle-refs">look for a resource</a> 
by its identity in the bundle first before trying to access it by its URL. -->
</p>

<p>
Свойство ресурса <code>id</code> - это относительный URI. В случае использования RESTful API этот id будет относительным по отношению к системному базовому URL, таким образом абсолютным URI ресурса будет:
<!-- The <code>id</code> property of a resource is a relative URI. In the case of the RESTful API, the 
id is relative to the system base URL such that the absolute URI of the resource is: -->
</p>
<pre>
[base]/[Type]/[id]
</pre>
<p>
При разрешении ссылок в связке, разрешение выполняется с помощью абсолютного URI. 
Например, если ресурс с установленным значением элемента base http://example.org/fhir содержит ссылку со значением Patient/2341, тогда она будет разрешена в ресурс Patient с id 2341 и base http://example.org/fhir, и это будет абсолютный URI http://example.org/fhir/Patient/2341.
<!-- When resolving references with in a bundle, the resolution is against the absolute URI. 
For instance, if a resource with a stated base of http://example.org/fhir has a reference
with a value of Patient/2341, then it will resolve to a Patient resource with an id of 
2341 and a base of http://example.org/fhir, which is an absolute URI of 
http://example.org/fhir/Patient/2341. -->
</p>
<p>
Есть одно исключение: для базового URI вида urn:uuid: или urn:oid: абсолютный URI не включает в себя тип ресурса:
<!-- There is one special case: for a base URI of urn:uuid: or urn:oid:, the absolute 
URI does not include the type of the resource: -->
</p>
<pre>
[base][id]
</pre>
<p>
OID и UUID предназначены для использования тогда, когда тип ресурса в имеющемся RESTful-интерфейсе не установлен.
<!-- OIDs and UUIDs are intended for use where the resource the entry is for has no established identity 
on an existing RESTful interface. -->
</p>




</div>