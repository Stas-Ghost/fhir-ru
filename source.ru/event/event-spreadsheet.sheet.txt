
=== Sheet Bindings =====================================

 -- Row 1 -----------------------------------
  Binding Name = EventStatus
  Binding = code list
  Reference = #event-status
  Definition = Codes identifying the stage lifecycle stage of a event
  Conformance = required

 -- Row 2 -----------------------------------
  Binding Name = EventStatusReason
  Binding = unbound
  Definition = Codes identifying the reason for the current state of an event

 -- Row 3 -----------------------------------
  Binding Name = EventCode
  Binding = unbound
  Definition = Codes indicating the details of what is/was done.  These will vary significantly based on the type of request resource and will often be example/preferred rather than extensible/required.

 -- Row 4 -----------------------------------
  Binding Name = EventReason
  Binding = unbound
  Definition = Codes identifying why this event was necessary.  These may be clinical reasons (e.g. diagnoses, symptoms) and/or administrative reasons.  While the detailed constraints of relevant reasons will vary by resource, some degree of consistency across resources around recommended codes would be desirable.

 -- Row 5 -----------------------------------
  Binding Name = EventPerformerRole
  Binding = value set
  Reference = http://hl7.org/fhir/ValueSet/performer-role
  Definition = Codes describing the types of functional roles performers can take on when performing events
  Conformance = example

 -- Row 6 -----------------------------------
  Binding Name = EventPerformerFunction
  Binding = unbound
  Definition = Codes that describe the specific involvement of a performer in an event.  E.g. Primary vs. secondary vs. supervising, etc.

=== Sheet event-status =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Code = preparation
  Display = Preparation
  Definition = The core event has not started yet, but some staging activities have begun (e.g. surgical suite preparation).  Preparation stages may be tracked for billing purposes.
  v3 = =ActStatus.new

 -- Row 2 -----------------------------------
  Id = 2
  Code = in-progress
  Display = In Progress
  Definition = The event is currently occurring
  v3 = =ActStatus.active

 -- Row 3 -----------------------------------
  Id = 8
  Code = not-done
  Display = Not Done
  Definition = The event was terminated prior to any impact on the subject (though preparatory actions may have been taken)
  v3 = =ActStatus.cancelled

 -- Row 4 -----------------------------------
  Id = 3
  Code = suspended
  Display = Suspended
  Definition = The event has been temporarily stopped but is expected to resume in the future
  v3 = =ActStatus.suspended

 -- Row 5 -----------------------------------
  Id = 4
  Code = aborted
  Display = Aborted
  Definition = The event was  terminated prior to the full completion of the intended actions but after having at least some impact on the subject.
  v3 = =ActStatus.aborted

 -- Row 6 -----------------------------------
  Id = 5
  Code = completed
  Display = Completed
  Definition = The event has now concluded
  v3 = =ActStatus.completed

 -- Row 7 -----------------------------------
  Id = 6
  Code = entered-in-error
  Display = Entered in Error
  Definition = This electronic record should never have existed, though it is possible that real-world decisions were based on it.  (If real-world activity has occurred, the status should be \"cancelled\" rather than \"entered-in-error\".)
  v3 = =ActStatus.nullified

 -- Row 8 -----------------------------------
  Id = 7
  Code = unknown
  Display = Unknown
  Definition = The authoring system does not know which of the status values currently applies for this request.  Note: This concept is not to be used for \"other\" - one of the listed statuses is presumed to apply, it\'s just not known which one.
  v3 = =NullFlavor.unknown

=== Sheet Invariants =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Context = Event
  English = Not Done Reason can only be specified if status is \'not-done\'
  XPath = f:status/@value=\'not-done\' or not(exists(f:notDoneReason))
  Expression = status=\'not-done\' or notDoneReason.exists().not()

 -- Row 2 -----------------------------------
  Id = 2
  Context = Event
  English = reason elements can only be specified if status is NOT \'not-done\'
  XPath = not(f:status/@value=\'not-done\') or not(exists(f:reasonCode) or exists(f:reasonReference))
  Expression = status!=\'not-done\' or (reasonCode.exists().not() and reasonReference.exists().not())

=== Sheet Data Elements =====================================

 -- Row 1 -----------------------------------
  Element = Event
  Type = Logical
  Short Name = Event Pattern
  Definition = A pattern to be followed by resources that represent the performance of some activity, possibly in accordance with a request or service definition
  v2 Mapping = EVN (for administrative events)
  RIM Mapping = Act[moodCode=EVN]

 -- Row 2 -----------------------------------
  Element = Event.identifier
  Card. = 0..*
  Summary = Y
  Type = Identifier
  Short Name = Business Identifier for {{title}}
  Definition = Identifiers assigned to this {{title}} by the performer or other systems
  Requirements = Allows identification of the {{title}} as it is known by various participating systems and in a way that remains consistent across servers
  v2 Mapping = Varies by domain
  RIM Mapping = .identifier
  w5 = id

 -- Row 3 -----------------------------------
  Element = Event.instantiates
  Card. = 0..*
  Summary = Y
  Type = uri
  Short Name = Instantiates protocol or definition
  Definition = The URL pointing to a protocol, guideline, orderset or other definition that is adhered to in whole or in part by this {{title}}
  v2 Mapping = Varies by domain
  RIM Mapping = .outboundRelationship[typeCode=DEFN].target

 -- Row 4 -----------------------------------
  Element = Event.basedOn
  Card. = 0..*
  Aliases = fulfills
  Summary = Y
  Type = Reference(Request)
  Short Name = Fulfills plan, proposal or order
  Definition = A plan, proposal or order that is fulfilled in whole or in part by this {{title}}
  Requirements = Allows tracing of authorization for the {{title}} and tracking whether proposals/recommendations were acted upon
  Comments = [The allowed reference resources may be adjusted as appropriate for the event resource]
  v2 Mapping = ORC in proximity to EVN segment
  RIM Mapping = .outboundRelationship[typeCode=FLFS].target

 -- Row 5 -----------------------------------
  Element = Event.partOf
  Card. = 0..*
  Aliases = container
  Summary = Y
  Type = Reference(Event)
  Short Name = Part of referenced event
  Definition = A larger event of which this particular {{title}} is a component or step
  Requirements = [E.g. Drug administration as part of a procedure, procedure as part of observation, etc.]
  Comments = Not to be used to link an {{title}} to an Encounter - use \'context\' for that.\n\n[The allowed reference resources may be adjusted as appropriate for the event resource]
  v2 Mapping = Varies by domain
  RIM Mapping = .inboundRelationship[typeCode=COMP].source[moodCode=EVN]

 -- Row 6 -----------------------------------
  Element = Event.status
  Card. = 1..1
  Is Modifier = Y
  Summary = Y
  Type = code
  Binding = EventStatus
  Short Name = preparation | in-progress | not-done | suspended | aborted | completed | entered-in-error | unknown
  Definition = The current state of the {{title}}
  Comments = A nominal state-transition diagram can be found in the [[event.html#statemachine | Event pattern]] documentation\n\nUnknown does not represent \"other\" - one of the defined statuses must apply.  Unknown is used when the authoring system is not sure what the current status is.
  v2 Mapping = Varies by domain
  RIM Mapping = .status
  w5 = status

 -- Row 7 -----------------------------------
  Element = Event.statusReason
  Card. = 0..1
  Aliases = Suspended Reason, Cancelled Reason
  Type = CodeableConcept
  Binding = EventStatusReason
  Short Name = Reason for current status
  Definition = Captures the reason for the current state of the {{title}}.
  Comments = This is generally only used for \"exception\" statuses such as \"not-done\", \"suspended\" or \"cancelled\".  The reason for performing the event at all is captured in reasonCode, not here.\n\n[distinct reason codes for different statuses can be enforced using invariants if they are universal bindings]
  RIM Mapping = .inboundRelationship[typeCode=SUBJ].source[classCode=CACT, moodCode=EVN].reasonCOde

 -- Row 8 -----------------------------------
  Element = Event.code
  Card. = 0..1
  Aliases = type
  Summary = Y
  Type = CodeableConcept
  Binding = EventCode
  Short Name = What was done
  Definition = A code that identifies the specific service or action that was or is being performed
  v2 Mapping = Varies by domain
  RIM Mapping = .code
  w5 = what

 -- Row 9 -----------------------------------
  Element = Event.subject
  Card. = 1..1
  Aliases = patient
  Summary = Y
  Type = Reference(Patient|Group)
  Short Name = Individual service was done for/to
  Definition = The individual or set of individuals the action is being or was performed on
  Requirements = Links the {{title}} to the Patient context
  Comments = [For resources that aren\'t patient-specific, the set of allowed resources may be extended to include other things.  Group should generally be retained unless there\'s certainty this resource won\'t be used for veterinary, research or public health settings where Group may be necessary (e.g. this cage of rats/crate of chickens, group of people in a 5 mile radious of the incident, etc.)]
  v2 Mapping = PAT in proximity to EVN segment
  RIM Mapping = .participation[typeCode=SBJ].role
  To Do = For mapping, is it better if we make this Any and then constrain it down?
  w5 = who.focus

 -- Row 10 -----------------------------------
  Element = Event.context
  Card. = 0..1
  Aliases = encounter
  Summary = Y
  Type = Reference(Encounter|EpisodeOfCare)
  Short Name = Associated Encounter / Episode
  Definition = The encounter or episode of care that establishes the context for this {{title}}
  Requirements = Links the {{title}} to the Encounter context
  Comments = This will typically be the encounter the {{title}} occurred within, but some {{title}}s may be initiated prior to or after the official completion of an encounter or episode but still be tied to the context of the encounter or episode (e.g. pre-admission lab tests).
  v2 Mapping = PV1 in proximity to EVN segment
  RIM Mapping = .inboundRelationship(typeCode=COMP].source[classCode<=PCPR, moodCode=EVN]
  w5 = context

 -- Row 11 -----------------------------------
  Element = Event.occurrence[x]
  Card. = 0..1
  Aliases = timing
  Summary = Y
  Type = dateTime|Period|Timing
  Short Name = When {{title}} occurred/is occurring
  Definition = The date, period or timing when the {{title}} did occur or is occurring
  Comments = This indicates when the activity actually occurred or is occurring, not when it was asked/requested/ordered to occur.  For the latter, look at the occurence element of the  Request this {{event}} is \"basedOn\".  The status code allows differentiation of whether the timing reflects a historic event or an ongoing event.  Ongoing events should not include an upper bound in the Period or Timing.bounds.\n\n[The list of types may be constrained as appropriate for the type of event.  The use of \'Timing\' in type is generally only appropriate for Events that are typically used to represent summary information.]
  v2 Mapping = Varies by domain
  RIM Mapping = .effectiveTime
  w5 = when.done

 -- Row 12 -----------------------------------
  Element = Event.performer
  Card. = 0..*
  Summary = Y
  Short Name = Who performed {{title}} and what they did
  Definition = Indicates who or what performed the {{title}} and how they were involved
  Comments = [Resources may choose to replace this with just a single performer or repeating where there\'s no need to distinguish the function performed]

 -- Row 13 -----------------------------------
  Element = Event.performer.function
  Card. = 0..1
  Summary = Y
  Type = CodeableConcept
  Binding = EventPerformerFunction
  Short Name = Type of performance
  Definition = Distinguishes the type of involvement of the performer in the {{title}}. [Consider adding examples]
  Requirements = Allows disambiguation of the types of involvement of different performers

 -- Row 14 -----------------------------------
  Element = Event.performer.actor
  Card. = 1..1
  Summary = Y
  Type = Reference(Practitioner|PractitionerRole|Organization|CareTeam|Patient|Device|RelatedPerson)
  Short Name = Who performed {{title}}
  Definition = Indicates who or what performed the {{title}}
  v2 Mapping = EVN.5 or by domain
  RIM Mapping = .participation[typeCode=PRF].role[scoper.determinerCode=INSTANCE]
  w5 = who.actor

 -- Row 15 -----------------------------------
  Element = Event.location
  Card. = 0..1
  Summary = Y
  Type = Reference(Location)
  Short Name = Where {{title}} occurred
  Definition = The principle physical location where the {{title}} was performed
  Requirements = Ties the event to where the records are likely kept and provides context around the event occurrence (e.g. if it occurred inside or outside a dedicated healthcare setting)
  v2 Mapping = EVN.7
  RIM Mapping = .participation[typeCode=LOC].role
  w5 = where

 -- Row 16 -----------------------------------
  Element = Event.reasonCode
  Card. = 0..*
  Summary = Y
  Type = CodeableConcept
  Binding = EventReason
  Short Name = Why was {{title}} performed?
  Definition = Describes why the {{title}} occurred in coded or textual form.
  Comments = Textual reasons can be captured using reasonCode.text
  v2 Mapping = EVN.4 or by domain
  RIM Mapping = .reasonCode
  w5 = why

 -- Row 17 -----------------------------------
  Element = Event.reasonReference
  Card. = 0..*
  Summary = Y
  Type = Reference(Condition|Observation|DiagnosticReport|DocumentReference)
  Short Name = Why was {{title}} performed?
  Definition = Indicates another resource whose existence justifies this {{title}}
  Comments = [Additional resources may be added as appropriate]
  v2 Mapping = EVN.4 or by domain
  RIM Mapping = .outboundRelationship[typeCode=RSON].target
  w5 = why

 -- Row 18 -----------------------------------
  Element = Event.note
  Card. = 0..*
  Type = Annotation
  Short Name = Comments made about the event
  Definition = Comments made about the {{title}} by the performer, subject or other participants.
  v2 Mapping = NTE
  RIM Mapping = .inboundRelationship(typeCode=SUBJ].source[classCode=ANNGEN, moodCode=EVN].value[xsi:type=ST]
