
=== Sheet Bindings =====================================

 -- Row 1 -----------------------------------
  Binding Name = TaskPerformerType
  Binding = code list
  Reference = #task-performer-type
  Definition = The type(s) of task performers allowed
  Description = A code describing the kind of performer that will act on this task.
  Conformance = preferred

 -- Row 2 -----------------------------------
  Binding Name = TaskPriority
  Binding = code list
  Reference = #task-priority
  Definition = The task\'s priority
  Description = The priority of a task (may affect service level applied to the task).
  Conformance = required

 -- Row 3 -----------------------------------
  Binding Name = TaskStatus
  Binding = code list
  Reference = #task-status
  Definition = The current status of the task.
  Conformance = required

 -- Row 4 -----------------------------------
  Binding Name = TaskBusinessStatus
  Binding = unbound
  Definition = The domain-specific business-contextual sub-state of the task.  For example: \"Blood drawn\", \"IV inserted\", \"Awaiting physician signature\", etc.

 -- Row 5 -----------------------------------
  Binding Name = TaskStage
  Binding = value set
  Reference = valueset-task-stage
  Definition = Distinguishes whether the task is a proposal, plan or full order
  Conformance = extensible

 -- Row 6 -----------------------------------
  Binding Name = TaskReason
  Binding = unbound
  Definition = Indicates why the task is needed.  E.g. Suspended because patient admitted to hospital.

 -- Row 7 -----------------------------------
  Binding Name = TaskInputParameterType
  Binding = unbound
  Definition = Codes to identify types of input parameters.  These will typically be specific to a particular workflow.  E.g. \"Comparison source\", \"Applicable consent\", \"Concommitent Medications\", etc.

 -- Row 8 -----------------------------------
  Binding Name = TaskOutputParameterType
  Binding = unbound
  Definition = Codes to identify types of input parameters.  These will typically be specific to a particular workflow.  E.g. \"Identified issues\", \"Preliminary results\", \"Filler order\", \"Final results\", etc.

=== Sheet task-performer-type =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Code = requester
  Display = Requester
  Definition = A workflow participant that requests services.

 -- Row 2 -----------------------------------
  Id = 2
  Code = dispatcher
  Display = Dispatcher
  Definition = A workflow participant that dispatches services (assigns another task to a participant).

 -- Row 3 -----------------------------------
  Id = 3
  Code = scheduler
  Display = Scheduler
  Definition = A workflow participant that schedules (dispatches and sets the time or date for performance of) services.
  Parent = #2

 -- Row 4 -----------------------------------
  Id = 4
  Code = performer
  Display = Performer
  Definition = A workflow participant that performs services.

 -- Row 5 -----------------------------------
  Id = 5
  Code = monitor
  Display = Monitor
  Definition = A workflow participant that monitors task activity.

 -- Row 6 -----------------------------------
  Id = 6
  Code = manager
  Display = Manager
  Definition = A workflow participant that manages task activity.

 -- Row 7 -----------------------------------
  Id = 7
  Code = acquirer
  Display = Acquirer
  Definition = A workflow participant that acquires resources (specimens, images, etc) necessary to perform the task.

 -- Row 8 -----------------------------------
  Id = 8
  Code = reviewer
  Display = Reviewer
  Definition = A workflow participant that reviews task inputs or outputs.

=== Sheet task-priority =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Code = low
  Display = Low
  Definition = This task has low priority.

 -- Row 2 -----------------------------------
  Id = 2
  Code = normal
  Display = Normal
  Definition = This task has normal priority.

 -- Row 3 -----------------------------------
  Id = 3
  Code = high
  Display = High
  Definition = This task has high priority.

=== Sheet task-status =====================================

 -- Row 1 -----------------------------------
  Code = draft
  Display = Draft
  Definition = The task is not yet ready to be acted upon.

 -- Row 2 -----------------------------------
  Code = requested
  Display = Requested
  Definition = The task is ready to be acted upon

 -- Row 3 -----------------------------------
  Code = received
  Display = Received
  Definition = A potential performer has claimed ownership of the task and is evaluating whether to perform it

 -- Row 4 -----------------------------------
  Code = accepted
  Display = Accepted
  Definition = The potential performer has agreed to execute the task but has not yet started work

 -- Row 5 -----------------------------------
  Code = rejected
  Display = Rejected
  Definition = The potential performer who claimed ownership of the task has decided not to execute it prior to performing any action.

 -- Row 6 -----------------------------------
  Code = ready
  Display = Ready
  Definition = Task is ready to be performed, but no action has yet been taken.  Used in place of requested/received/accepted/rejected when request assignment and acceptance is a given.

 -- Row 7 -----------------------------------
  Code = in-progress
  Display = In Progress
  Definition = Task has been started but is not yet complete.

 -- Row 8 -----------------------------------
  Code = on-hold
  Display = On Hold
  Definition = Task has been started but work has been paused

 -- Row 9 -----------------------------------
  Code = failed
  Display = Failed
  Definition = The task was attempted but could not be completed due to some error.

 -- Row 10 -----------------------------------
  Code = completed
  Display = Completed
  Definition = The task has been completed (more or less) as requested.

=== Sheet Invariants =====================================

 -- Row 1 -----------------------------------
  Id = inv-1
  Context = Task
  English = Last modified date must be greater than or equal to created date.
  XPath = f:lastModified >= f:created
  Expression = lastModified >= created
  Severity = error

=== Sheet Data Elements =====================================

 -- Row 1 -----------------------------------
  Element = Task
  Type = DomainResource
  Short Label = A task to be performed
  Definition = A task to be performed
  RIM Mapping = ControlAct[moodCode=INT]
  w5 = workflow.order

 -- Row 2 -----------------------------------
  Element = Task.identifier
  Card. = 0..1
  Type = Identifier
  Short Label = Task Instance Identifier
  Definition = The business identifier for this task.
  RIM Mapping = .id
  w5 = id

 -- Row 3 -----------------------------------
  Element = Task.basedOn
  Card. = 0..*
  Summary = Y
  Type = Reference(Any)
  Short Label = Request fulfilled by this task
  Definition = Identifies a plan, proposal or order that this task has been created in fulfillment of
  RIM Mapping = .outboundRelationship[typeCode=FLFS].target[moodCode=INT]

 -- Row 4 -----------------------------------
  Element = Task.requisition
  Card. = 0..1
  Summary = Y
  Type = Identifier
  Short Label = Requisition or grouper id
  Definition = An identifier that links together multiple tasks and other requests that were created in the same context
  Requirements = Billing and/or reporting can be linked to whether multiple requests were created as a single unit.
  RIM Mapping = .inboundRelationship[typeCode=COMP].source[moodCode=INT].id

 -- Row 5 -----------------------------------
  Element = Task.parent
  Card. = 0..*
  Summary = Y
  Type = Reference(Task)
  Short Label = Composite task
  Definition = Task that this particular task is part of
  Requirements = Allows tasks to be broken down into sub-steps (and this division can occur independent of the original task)
  Comments = This should usually be 0..1
  RIM Mapping = .inboundRelationship[typeCode=COMP].source[moodCode=INT]

 -- Row 6 -----------------------------------
  Element = Task.status
  Card. = 1..1
  Summary = Y
  Type = code
  Binding = TaskStatus
  Short Label = draft | requested | received | accepted | +
  Definition = The current status of the task.
  Requirements = These states enable coordination of task status with off-the-shelf workflow solutions that support automation of tasks.
  RIM Mapping = .statusCode
  w5 = status

 -- Row 7 -----------------------------------
  Element = Task.statusReason
  Card. = 0..1
  Summary = Y
  Type = CodeableConcept
  Short Label = Reason for current status
  Definition = An explanation as to why this task is held, failed, was refused, etc.
  Comments = This applies to the current status.  Look at the history of the task to see reasons for past statuses
  RIM Mapping = .inboundRelationship[typeCode=SUBJ].source[classCode=CACT, moodCode=EVN, code=\"status change\"].reasonCode

 -- Row 8 -----------------------------------
  Element = Task.businessStatus
  Card. = 0..1
  Summary = Y
  Type = CodeableConcept
  Binding = TaskBusinessStatus
  Short Label = E.g. \"Specimen collected\", \"IV prepped\"
  Definition = Contains business-specific nuances of the business state.
  Requirements = There\'s often a need to track substates of a task - this is often variable by specific workflow implementation
  RIM Mapping = .inboundRelationship[typeCode=SUBJ].source[classCode=OBS, moodCode=EVN, code=\"business status\"]

 -- Row 9 -----------------------------------
  Element = Task.stage
  Card. = 1..1
  Summary = Y
  Type = CodeableConcept
  Binding = TaskStage
  Short Label = proposed | planned | actionable +
  Definition = Indicates the \"level\" of actionability associated with the Task.  I.e. Is this a proposed task, a planned task, an actionable task, etc.
  Comments = This element is immutable.  Proposed tasks, planned tasks, etc. must be distinct instances.
  RIM Mapping = .moodCode
  w5 = class

 -- Row 10 -----------------------------------
  Element = Task.code
  Card. = 0..1
  Summary = Y
  Type = CodeableConcept
  Short Label = Task Type
  Definition = A name or code (or both) briefly describing what the task involves.
  RIM Mapping = .code
  w5 = class

 -- Row 11 -----------------------------------
  Element = Task.priority
  Card. = 0..1
  Type = code
  Binding = TaskPriority
  Short Label = low | normal | high
  Definition = The priority of the task among other tasks of the same type
  Requirements = Used to identify the service level expected while performing a task.
  RIM Mapping = .priorityCode
  Missing Meaning = If missing, this task should be performed with normal priority
  w5 = grade

 -- Row 12 -----------------------------------
  Element = Task.description
  Card. = 0..1
  Summary = Y
  Type = string
  Short Label = Human-readable explanation of task
  Definition = A free-text description of what is to be performed.
  RIM Mapping = .text

 -- Row 13 -----------------------------------
  Element = Task.focus
  Card. = 0..1
  Summary = Y
  Type = Reference(Any)
  Short Label = What task is acting on
  Definition = The request being actioned or the resource being manipulated by this task
  Requirements = Used to identify the thing to be done
  Comments = If multiple resources need to be manipulated, use sub-tasks.  (This ensures that status can be tracked independently for each referenced resource.)
  RIM Mapping = .outboundRelationship[typeCode=SUBJ].target
  w5 = what

 -- Row 14 -----------------------------------
  Element = Task.for
  Card. = 0..1
  Aliases = Patient
  Summary = Y
  Type = Reference(Any)
  Short Label = Beneficiary of the Task
  Definition = The entity who benefits from the performance of the service specified in the task (e.g., the patient).
  Requirements = Used to track tasks outstanding for a beneficiary.  Do not use to track the task owner or creator (see owner and creator respectively).  This can also affect access control
  RIM Mapping = .participation[typeCode=RCT].role
  w5 = who.focus

 -- Row 15 -----------------------------------
  Element = Task.context
  Card. = 0..1
  Summary = Y
  Type = Reference(Encounter|EpisodeOfCare)
  Short Label = Healthcare event during which this task originated
  Definition = The healthcare event  (e.g. a patient and healthcare provider interaction) during which this task was created
  Requirements = For some tasks it may be important to know the link between the task or episode of care the task originated within.
  RIM Mapping = .inboundRelationship[typeCode=COMP].source[classCode=PCPR, moodCode=EVN]
  w5 = context

 -- Row 16 -----------------------------------
  Element = Task.created
  Card. = 1..1
  Aliases = Created Date
  Inv. = inv-1
  Type = dateTime
  Short Label = Task Creation Date
  Definition = The date and time this task was created.
  Requirements = Most often used along with lastUpdated to track duration of task to supporting monitoring and management.
  RIM Mapping = .participation[typeCode=AUT].time
  w5 = when.recorded

 -- Row 17 -----------------------------------
  Element = Task.lastModified
  Card. = 1..1
  Aliases = Update Date
  Summary = Y
  Inv. = inv-1
  Type = dateTime
  Short Label = Task Last Modified Date
  Definition = The date and time of last modification to this task.
  Requirements = Used along with history to track task activity and time in a particular task state.  This enables monitoring and management.
  RIM Mapping = .inboundRelationship[typeCode=SUBJ, ].source[classCode=CACT, moodCode=EVN].effectiveTime

 -- Row 18 -----------------------------------
  Element = Task.requester
  Card. = 1..1
  Aliases = Initiator; Author
  Summary = Y
  Type = Reference(Device | Organization | Patient | Practitioner | RelatedPerson )
  Short Label = Task Creator
  Definition = The creator of the task.
  Requirements = Identifies who created this task.  May be used by access control mechanisms (e.g., to ensure that only the creator can cancel a task).
  RIM Mapping = .participation[typeCode=AUT].role
  w5 = who.author

 -- Row 19 -----------------------------------
  Element = Task.owner
  Card. = 0..1
  Aliases = Performer; Executer
  Summary = Y
  Type = Reference(Device | Organization | Patient | Practitioner | RelatedPerson )
  Short Label = Task Owner
  Definition = The owner of this task.  The participant who can execute this task.
  Requirements = Identifies who is expected to perform this task.
  Comments = Tasks may be created with an owner not yet identified
  RIM Mapping = .participation[typeCode=PRF].role
  w5 = who.actor

 -- Row 20 -----------------------------------
  Element = Task.performerType
  Card. = 0..*
  Type = CodeableConcept
  Binding = TaskPerformerType
  Short Label = requester | dispatcher | scheduler | performer | monitor | manager | acquirer | reviewer
  Definition = The type of participant that can execute the task.
  Requirements = Use to distinguish tasks on different activity queues.
  RIM Mapping = .participation[typeCode=PRF].role.code
  w5 = who.actor

 -- Row 21 -----------------------------------
  Element = Task.reason
  Card. = 0..1
  Type = CodeableConcept
  Binding = TaskReason
  Short Label = Why task is needed
  Definition = A description or code indicating why this task needs to be performed
  Comments = This should only be included if there is no focus or if it differs from the reason indicated on the focus.
  RIM Mapping = .reasonCode
  w5 = why

 -- Row 22 -----------------------------------
  Element = Task.note
  Card. = 0..*
  Type = Annotation
  Short Label = Comments made about the task
  Definition = Free-text information captured about the task as it progresses.
  RIM Mapping = .inboundRelationship[typeCode=SUBJ, ].source[classCode=OBS, moodCode=EVN, code=\"annotation\"].value(string)

 -- Row 23 -----------------------------------
  Element = Task.fulfillment
  Card. = 0..1
  UML = 400;00
  Short Label = Constraints on fulfillment tasks
  Definition = Identifies any limitations on what part of a referenced task subject request should be actioned
  Requirements = Sometimes when fulfillment is sought, you don\'t want full fulfillment
  RIM Mapping = Instead of pointing to request, would point to component of request, having these characteristics

 -- Row 24 -----------------------------------
  Element = Task.fulfillment.repetitions
  Card. = 0..1
  Type = positiveInt
  Short Label = How many times to repeat
  Definition = Indicates the number of times the requested action should occur
  Requirements = E.g. order that requests monthly lab tests, fulfillment is sought for 1
  RIM Mapping = .repeatNumber

 -- Row 25 -----------------------------------
  Element = Task.fulfillment.period
  Card. = 0..1
  Type = Period
  Short Label = Over what time-period is fulfillment sought
  Requirements = E.g. order that authorizes 1 year\'s services.  Fulfillment is sought for next 3 months.
  RIM Mapping = .effectiveTime(IVL<TS>)

 -- Row 26 -----------------------------------
  Element = Task.fulfillment.recipients
  Card. = 0..*
  Type = Reference(Patient|Practitioner|RelatedPerson|Group|Organization)
  Short Label = For whom is fulfillment sought?
  Definition = For requests that are targeted to more than on potential recipient/target, for whom is fulfillment sought?
  RIM Mapping = .participation[typeCode=SBJ].role
  To Do = Is this in the 80%?

 -- Row 27 -----------------------------------
  Element = Task.definition
  Card. = 0..1
  Summary = Y
  Type = uri
  Short Label = Task Definition
  Definition = A reference to a formal or informal definition of the task.  For example, a protocol, a step within a defined workflow definition, etc.
  Requirements = Enables a formal definition of how he task is to be performed (e.g. using BPMN, BPEL, XPDL or other formal notation) to be associated with a task, enabling automation.
  RIM Mapping = .outboundRelationship[typeCode=DEFN].target

 -- Row 28 -----------------------------------
  Element = Task.input
  Card. = 0..*
  Aliases = Supporting Information
  UML = 400;125
  Type = =Parameter
  Short Label = Supporting information
  Definition = Additional information that may be needed in the execution of the task
  Requirements = Resources and data used to perform the task.  This data is used in the business logic of task execution, and is stored separately because it varies between workflows.
  RIM Mapping = ???

 -- Row 29 -----------------------------------
  Element = Task.input.type
  Card. = 1..1
  Aliases = Name
  Type = CodeableConcept
  Binding = TaskInputParameterType
  Short Label = Label for the input
  Definition = A code or description indicating how the input is intended to be used as part of the task execution
  Requirements = Inputs are named to enable task automation to bind data and pass it from one task to the next.
  Comments = If referencing a BPMN workflow or Protocol, the \"system\" is the URL for the workflow definition and the code is the \"name\" of the required input.
  RIM Mapping = ???

 -- Row 30 -----------------------------------
  Element = Task.input.value[x]
  Card. = 1..1
  Type = *
  Short Label = Input Value
  Definition = The value of the input parameter as a basic type.
  RIM Mapping = ???

 -- Row 31 -----------------------------------
  Element = Task.output
  Card. = 0..*
  UML = 400;200
  Type = @Parameter
  Short Label = Task Output
  Definition = Outputs produced by the Task
  Requirements = Resources and data produced during the execution the task.  This data is generated by the business logic of task execution, and is stored separately because it varies between workflows.
  RIM Mapping = ???

 -- Row 32 -----------------------------------
  Element = Task.output.type
  Card. = 1..1
  Aliases = Name
  Type = CodeableConcept
  Binding = TaskOutputParameterType
  Short Label = Output Name
  Definition = The name of the Output parameter.
  Requirements = Outputs are named to enable task automation to bind data and pass it from one task to the next.
  RIM Mapping = ???

 -- Row 33 -----------------------------------
  Element = Task.output.value[x]
  Card. = 1..1
  Type = *
  Short Label = Output Value
  Definition = The value of the Output parameter as a basic type.
  Requirements = Task outputs can take any form.
  RIM Mapping = ???

=== Sheet Search =====================================

 -- Row 1 -----------------------------------
  Name = identifier
  Type = token
  Description = Search for a task instance by its business identifier
  Path = Task.identifier

 -- Row 2 -----------------------------------
  Name = code
  Type = token
  Description = Search by task code
  Path = Task.code

 -- Row 3 -----------------------------------
  Name = performer
  Type = token
  Description = Search by recommended type of performer (e.g., Requester, Performer, Scheduler).
  Path = Task.performerType

 -- Row 4 -----------------------------------
  Name = priority
  Type = token
  Description = Search by task priority
  Path = Task.priority

 -- Row 5 -----------------------------------
  Name = status
  Type = token
  Description = Search by task status
  Path = Task.status

 -- Row 6 -----------------------------------
  Name = statusreason
  Type = token
  Description = Search by status reason
  Path = Task.statusReason

 -- Row 7 -----------------------------------
  Name = focus
  Type = reference
  Description = Search by task focus
  Path = Task.focus

 -- Row 8 -----------------------------------
  Name = definition
  Type = uri
  Description = Search by task definition
  Path = Task.definition

 -- Row 9 -----------------------------------
  Name = created
  Type = date
  Description = Search by creation date
  Path = Task.created

 -- Row 10 -----------------------------------
  Name = modified
  Type = date
  Description = Search by last modification date
  Path = Task.lastModified

 -- Row 11 -----------------------------------
  Name = owner
  Type = reference
  Description = Search by task owner
  Path = Task.owner

 -- Row 12 -----------------------------------
  Name = requester
  Type = reference
  Description = Search by task requester
  Path = Task.requester

 -- Row 13 -----------------------------------
  Name = parent
  Type = reference
  Description = Search by parent task
  Path = Task.parent

 -- Row 14 -----------------------------------
  Name = patient
  Type = reference
  Description = Search by patient
  Path = Task.for
  Target Types = Patient

 -- Row 15 -----------------------------------
  Name = stage
  Type = token
  Description = Search by task stage
  Path = Task.stage

=== Sheet Profiles =====================================

=== Sheet Examples =====================================

=== Sheet Examples =====================================

 -- Row 1 -----------------------------------
  Name = reserve
  Use = Instance
  Documentation = Reserve this task for the specified entity.  Makes the specified entity the task owner, and transitions the task to the Ready state.  This operation may be used by an entity to claim a task for itself, or to delegate or forward the task to another entity.
  Type = operation
  Title = Reserve Task

 -- Row 2 -----------------------------------
  Name = reserve.owner
  Use = in
  Documentation = The entity who is to be assigned ownership of this task.
  Type = Reference(Device | Organization | Patient | Practitioner | RelatedPerson )
  Min = 1
  Max = 1

 -- Row 3 -----------------------------------
  Name = start
  Use = Instance
  Documentation = Start this task by the specified entity (or if none specified, by the present task owner).  If an owner is specified, that owner is assigned as the task owner.  The task is transitioned to the In Progress state.
  Type = operation
  Title = Start Task

 -- Row 4 -----------------------------------
  Name = start.owner
  Use = in
  Documentation = The entity who is to be assigned ownership of this task.  If no entity is provided, the ownership of the task remains unchanged.
  Type = Reference(Device | Organization | Patient | Practitioner | RelatedPerson )
  Min = 0
  Max = 1

 -- Row 5 -----------------------------------
  Name = finish
  Use = Instance
  Documentation = Finish this task.  The task is transitioned to the completed state.
  Type = operation
  Title = Finish Task

 -- Row 6 -----------------------------------
  Name = fail
  Use = Instance
  Documentation = Fail this task.  The task is transitioned to the failed state.
  Type = operation
  Title = Fail Task

 -- Row 7 -----------------------------------
  Name = fail.reason
  Use = in
  Documentation = The reason for failure.  If present, this is assigned to the failureReason property of the task.
  Type = CodeableConcept
  Min = 0
  Max = 1

 -- Row 8 -----------------------------------
  Name = release
  Use = Instance
  Documentation = Release a previously reserved task.  The task owner is cleared and the task is transitioned to the Ready state.
  Type = operation
  Title = Release Task

 -- Row 9 -----------------------------------
  Name = suspend
  Use = Instance
  Documentation = Place a hold on any activity for this task until it is subsequently resumed.  The task remains in  its current state but is marked as being suspended, indicating that no additional activity should b performed.  If the task has subtasks, these are also suspended.
  Type = operation
  Title = Suspend Task

 -- Row 10 -----------------------------------
  Name = resume
  Use = Instance
  Documentation = Indicate that activity on this task can now be resumed.  Removes the mark that the task is suspended, and propgates the resume to any child tasks.
  Type = operation
  Title = Resume Task

 -- Row 11 -----------------------------------
  Name = cancel
  Use = Instance
  Documentation = Cancel the task.  Set the status of the task to cancelled.
  Type = operation
  Title = Cancel Task

 -- Row 12 -----------------------------------
  Name = stop
  Use = Instance
  Documentation = Stop processing the task.  The task is returned to the ready state.
  Type = operation
  Title = Stop Task

 -- Row 13 -----------------------------------
  Name = set-input
  Use = Instance
  Documentation = Set one of the inputs for a task.
  Type = operation
  Title = Set Task Input

 -- Row 14 -----------------------------------
  Name = set-input.input
  Use = in
  Type = Tuple
  Min = 1
  Max = *

 -- Row 15 -----------------------------------
  Name = set-input.input.name
  Documentation = The name of the input to add or update.
  Type = string
  Min = 1
  Max = 1

 -- Row 16 -----------------------------------
  Name = set-input.input.value[x]
  Documentation = If no value is provided, any current input with that name is removed from the resource.
  Type = *
  Min = 0
  Max = 1

 -- Row 17 -----------------------------------
  Name = set-output
  Use = Instance
  Documentation = Set one of the outputs of a task.
  Type = operation
  Title = Set Task Output

 -- Row 18 -----------------------------------
  Name = set-output.output
  Use = out
  Type = Tuple
  Min = 1
  Max = *

 -- Row 19 -----------------------------------
  Name = set-output.output.name
  Documentation = The name of the output to add or update.
  Type = string
  Min = 1
  Max = 1

 -- Row 20 -----------------------------------
  Name = set-output.output.value[x]
  Documentation = If no value is provided, any current output with that name is removed from the resource.
  Type = *
  Min = 0
  Max = 1
