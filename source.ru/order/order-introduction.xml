<div xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml ../../schema/fhir-xhtml.xsd" xmlns="http://www.w3.org/1999/xhtml">
<div>
<h2>Область применения и использование</h2>
<p>
Ресурс order описывает запрос на выполнение действия. Ожидается, что заказ приведет к одному или нескольким <a href="orderresponse.html">responses</a>, которые описывают результат обработки заказа. Ресурс order сосредоточен непосредственно на процессе запроса на действие для выполнения; само действие для выполнения описывается в отдельном ресурсе, который содержит данные по нему. Обратите внимание, что заказы часто называют "запросами", но здесь это название не используется, так как слово "запрос" (request) применяется в данной спецификации для другого.
<!-- An order resource describes a request that an action be performed. An order is 
expected to lead to one or more <a href="orderresponse.html">responses</a> that describe 
the outcome of processing/handling the order. The order resource is focused on
the process of actually requesting an action be performed; the actual action to 
be performed  is detailed in a separate resource that contains the details. 
Note that orders are often called "requests", but this name is not used here 
since the word "request" is used differently elsewhere in this specification. -->
</p>
<p>
Обратите внимание, что существуют различные процессы, связанные с созданием и обработкой заказов. Некоторые заказы могут обрабатываться тут же автоматизированными системами, но большинству требуются реальные действия одного или нескольких людей. Некоторые заказы могут быть обработаны только после того, как произойдут другие действия реального мира, например пациент на самом деле придет, чтобы действие над ним могло быть выполнено. Часто такие зависимости от реального мира лишь подразумеваются в деталях заказа.
<!-- 
Note that there are a variety of processes associated with making and processing 
orders. Some orders may be handled immediately by automated systems but most require 
real world actions by one or more humans. Some orders can only be processed when other real 
world actions happen, such as a patient actually presenting themselves so that 
the action to be performed can actually be performed. Often these real world dependencies are only 
implicit in the order details. 
  -->
</p>
</div>
<div>
<h2>Предпосылки и контекст</h2>
<h3>Разделение заказа и деталей заказа<!-- Separation of Order and Order details --></h3>
<p>
В сфере здравоохранения информация о том, что некоторое действие было затребовано, часто рассеяно по всему контексту здравоохранения пациента. Например медицинская запись пациента будет часто включать список предписаний, которые были сделаны пациенту. При этом наличия самой записи о предписании не достаточно, чтобы создать обязательство по его выдаче. Большинство других вещей, которые могут быть заказаны, следуют этой же схеме.
<!-- 
In healthcare, information that a particular action has been requested is often widely 
disseminated throughout the context of a patient's healthcare. For example, the patient's
healthcare record will often include a list of prescriptions that have been made for 
the patient. For this reason, the presence of a prescription record itself is not 
enough to create an obligation for a dispense to occur. Most other things that can be
ordered follow this same pattern. 
  -->
</p>
<p>
По этой причине информация о том, что именно запрашивается, отделена от непосредственно запроса на действие для выполнения. Разнообразные рабочие процессы по самому заказу/выполнению связаны с данным ресурсом и ресурсом <a href="orderresponse.html">Order Response</a>, а подробности того, что фактически заказывается, делегируются другим ресурсам.
<!-- 
For this reason, the information about what is requested is separated from the 
actual request for an action to be taken. The various workflows around the
actual order/fulfillment process are associated with this resource and the 
<a href="orderresponse.html">Order Response</a> resource, while the details
of what is actually ordered are delegated to other resources.
 -->
</p>
<h3>Использование ресурсов Order в RESTful-контексте <!-- Using Orders in a RESTful context --></h3>
<p>
В RESTful-контексте сервер функционирует как репозиторий запросов. Когда сервер принимает заказ, он его только сохраняет; нет прямого ответа на заказ. Какой-то другой процесс обнаруживает существование заказа, обрабатывает его и создает один или несколько ответов, когда заказ обработан. Как правило, эти ответы становятся доступными на том же сервере, что и заказ, чтобы клиент мог следить за результатом выполняющегося заказа. 
<!-- In a RESTful context, a server functions as a repository of requests. When the 
server accepts the order, it has only stored the order; there is no direct 
response to the order. Some other process detects the existence of the order, 
processes it, and creates one or more responses as the order is processed. 
Usually, these responses are made available on the same server as the order, so that
the client can monitor the result of the original order. --></p>
<p>Клиент может определить, что заказ еще не был выполнен, выполнив поиск по ресурсам order и не найдя соответствующих ответов (см. ниже)
<!-- A client can determine that an order has not been performed by searching for order resources
with no matching responses (see below)
 --></p>
<h3>Использование ресурсов Orders при обмене сообщениями<!-- Using Orders with messaging --></h3>
<p>Для отправки заказов определены два кода сообщений о событии: синхронное и асинхронное.
<!-- 
Two message event codes are defined for sending orders: synchronous and asynchronous.
 --></p>
<p>
В <a href="messaging.html#synchronous">синхронном сообщении</a> сообщение заказа (а именно <a href="compartments.html#bundle">bundle</a> с ресурсом <a href="messageheader.html">Message Header</a>, ресурсом order и ресурсом <i>detail</i> с деталями заказа - см. ниже) отправляется в систему, и она отвечает сообщением, которое включает <a href="orderresponse.html">ответ</a> 
(ресурс Message Header и ресурс Order Response наряду с дополнительной информацией в случае необходимости). Такой синхронный обмен сообщениями является простым, но подходит, если нужен только один ответ, и где этот ответ может быть создан в кратчайшие сроки.
<!-- 
In a  <a href="messaging.html#synchronous">synchronous message</a>, an order message (i.e. a <a href="compartments.html#bundle">bundle</a> with a
<a href="messageheader.html">Message Header</a> resource, an order resource and a <i>detail</i> resource for the order - see below) 
is sent to a system, and it responds with a message that includes the <a href="orderresponse.html">response</a> 
(a Message Header resource, and Order Response resource, along with additional details as appropriate). This 
synchronous message exchange is simple, but only useful where there only needs to be one response, and where 
the response can be made in a timely fashion.
 -->
</p>
<p>
Для более общего использования также определен код асинхронного сообщения о событии. С помощью этого кода запрашивающая система отправляет сообщение заказа и получает простое сообщение о подтверждении (только ресурс message), которое подтверждает, что заказ был получен. Затем система-получатель отправляет один или несколько ответный сообщений по мере обработки заказа. Каждое из этих ответных сообщений отправляется обратно первоначальной системе, которая также подтверждает получение этих сообщений с помощью сообщения о подтверждении.
<!-- 
For more general use, an asynchronous message event code is also defined. With this code, 
the requesting system sends the order message, and receives a simple acknowledgement message (only 
a message resource) that acknowledges that the order was received. Then the receiving 
system sends one or more response messages as the order is processed. Each of these response messages
is sent back to the originating system, which also acknowledges receipt of these messages with
an acknowledgement message.
 -->
</p>
<h3>Использование заказов в других контекстах<!-- Using orders in other contexts --></h3>
<p>
Имеется широкий выбор способов реализовать ресурсы Order/Order Response. Order и Order Response - это особые ресурсы, созданные для управления поведением в RESTful-контексте или контексте обмена сообщениями. В других контекстах, например в среде на основе сервисов, могут быть альтернативные методы управления этим поведением, которые больше подходят, и в таких контекстах нет никакой необходимости использовать Order/Order Response.
<!-- 
There are a wide variety of ways to implement Order/Order Response. The Order and Order Response 
resources are special resources created to manage behavior in a RESTful or messaging context. 
In other contexts, such as a Service based environment, there may be alternate methods for 
managing this behavior that are more appropriate, and there is no need to use Order/Order Response
in these contexts.
 -->
</p>
	</div>
	<div>
		<h2>Границы и связи</h2>
		<p>
		Как описано выше, разница между ресурсом Order и ресурсами домена order в том, что Order - это административный ресурс <b>рабочего процесса</b>, а не клинический ресурс. Он используется для управления запросами на выполнение и другими переходными состояниями "реальных" клинических заказов - <a href="deviceuserequest.html">DeviceUseRequest</a>, <a href="diagnosticorder.html">DiagnosticOrder</a>,  <a href="medicationprescription.html">MedicationPrescription</a>, <a href="nutritionorder.html">NutritionOrder</a> и <a href="procedurerequest.html">ProcedureRequest</a>. 
<!--  
As described above, the split between the Order resource and the domain order resources is that  Order is a <b>workflow</b> resource, not a clinical resource. It is used to manage fulfillment requests and other state transitions for the 'real' clinical orders - <a href="deviceuserequest.html">DeviceUseRequest</a>, <a href="diagnosticorder.html">DiagnosticOrder</a>,  <a href="medicationprescription.html">MedicationPrescription</a>, <a href="nutritionorder.html">NutritionOrder</a> and <a href="procedurerequest.html">ProcedureRequest</a>. -->
</p>
	</div>
</div>
