<div xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml ../../schema/fhir-xhtml.xsd" xmlns="http://www.w3.org/1999/xhtml">


<a name="safety"> </a>
<h2>Надежность и безопасность<!-- Safety and Security --></h2>
<p>Исполнение каждого из каналов, задокументированных ниже, включает сервер, отправляющий коммуникацию, которая обнаружит информацию о взаимосвязи клиента и сервера, и, если весь ресурс целиком отправлен, административную или клиническую информацию, которая может быть в достаточной степени конфиденциальной и/или защищенной законом. Серверы отвечают за обеспечение применения надлежащих мер безопасности для каждого канала. Ресурс subscription не решает эти проблемы напрямую - предполагается, что они регулируются другой конфигурацией. К примеру, сервер может поддерживать белый список допустимых серверов для методов rest-create/rest-update.
<!-- Executing each of the channels documented below involves the server
sending a communication that will reveal information about the 
client and server relationship, and, if the entire resource is 
sent, administrative or clinical information that may be quite 
sensitive and/or protected under law. Servers are responsible
for ensuring appropriate security is employed for each channel. 
The subscription resource does not address these concerns 
directly - it is assumed that these are administered by other 
configuration. For instance, a server might maintain a whitelist 
of acceptable servers for the rest-create/rest-update methods. -->
</p>
<p>
Электронные письма должны, как правило, быть защищены такими методами, как <a href="http://directproject.org/">Direct</a>.
<!-- Emails should generally be secured using some technique such as 
<a href="http://directproject.org/">Direct</a>. -->
</p>

<a name="errors"> </a>
<h2>Управление подписками и ошибки<!-- Managing Subscriptions and Errors --></h2>
<p>
Подписка задается созданием ресурса subscription на сервере.
Когда подписка создается клиентом, ее статус устанавливается в значение "requested". После отправления подписки командой POST клиент разбирает заголовок Location и сохраняет логический идентификатор нового ресурса Subscription для использования в последующих операциях.
<!-- A subscription is defined by creating the subscription on the server.
When the subscription is created by the client, it sets the status
to "requested". After POSTing the subscription, the client parses 
the Location header and saves the new Subscription's logical id for 
use in subsequent operations. -->
</p>
<p>
Критерии подлежат тем же ограничениям, что и клиент, создавший их, например доступ к модулям пациента и т. п. Обратите внимание, что подписка остается активной после того, как истекает токен доступа клиента.
<!-- The criteria are subject to the same limitations as the client that
created it, such as access to patient compartments etc. Note that the
subscription remains active after the client access tokens expire. -->
</p>
<p>
После того как сервер активировал подписку, он устанавливает ее статус в значение "active" (примечание: сервер может сделать это при приеме ресурса, если хочет).
<!-- Once the server has activated the subscription, it sets the status
to "active" (note: the server can do this as it accepts the resource
if it wants).  -->
</p>
<p>
Должным образом авторизованный клиент может использовать операции search и/или history, чтобы увидеть, какие подписки активны в текущий момент на сервере. Как только подписка больше не нужна, клиент удаляет подписку с сервера.
<!-- An appropriately authorized client can use search and/or history operations
to see what subscriptions are currently active on the server.
Once the subscription is no longer desired, the client deletes the 
subscription from the server. -->
</p>
<p>
Сервер может повторно попытаться отправить оповещение фиксированное количество раз и/или ссылаться на ошибки в своих собственных логах событий. Если при оповещении происходит сбой, сервер должен установить статус в значение  'error' и отметить эту ошибку в ресурсе. Если оповещение проходит успешно, сервер должен обновить статус снова до значения 'active'. Если при оповещении сбой происходит постоянно, сервер может установить статус подписки в значение off и прекратить попытки отправить оповещение.
<!-- The server may retry the notification a fixed number of times and/or
refer errors to its own alert logs. If the notification fails, the 
server should set the status to 'error', and mark the error in the 
resource. If the notification succeeds, the server should update
the status to "active again. If a subscription fails consistently 
a server may choose set the subscription status to off, and stop
trying to send notifications. -->
</p>
<p>
Если в подписке обозначена фиксированная дата окончания, сервер автоматически удалит ее в указанное время.
<!-- If a subscription nominates a fixed end date, the server automatically
deletes it at the specified time. -->
</p>
 

<a name="channels"> </a>
<h2>Каналы<!-- Channels --></h2>

<h3>REST Hook</h3>

<p>
В этом методе используется пустое сообщение POST для оповещения клиента о том, что доступны новые результаты.
<!-- This uses an empty POST message to alert the client that new results 
are available. -->
</p>
<pre class="json">
POST /Subscription

{
  "resourceType": "Subscription",
  "criteria": "/Observation?name=http://loinc.org|1975-2&amp;_format=json",
  "channel": {
    "type": "rest-hook",
    "url": "https://biliwatch.com/customers/mount-auburn-miu/on-result",
    "header": ["Authorization: Bearer secret-token-abc-123"]
  }
}
</pre>
<p>
При создании или обновлении ресурса, который соответствует критериям, сервер отправляет POST-запрос без тела запроса на указанный URL.
<!-- When a resource is created or updated that meets the criteria, the server
sends a POST request with no body to the nominated URL. -->
</p>
<p>
Когда клиент получает POST-сообщение по адресу https://biliwatch.com/customers/mount-auburn-miu/on-result, он перевыпускает критерии в виде запроса на сервер, добавляя &amp;_since=:last (где :last заменяется временем последней проверки клиентом). Таким образом он может получить все новые подходящие ресурсы <a href="observation.html">Observations</a>.
<!-- When the client receives a POST to https://biliwatch.com/customers/mount-auburn-miu/on-result, 
it re-issues the criteria as a query to the server, appending &amp;_since=:last (where :last is 
replaced by the time at which the client last checked). In this way it can fetch all new 
relevant <a href="observation.html">Observations</a>. -->
</p>
<p>
Поскольку полезная нагрузка отсутствует, данные в ресурсах доступны только через REST API, который помогает объединить логику авторизации и аутентификации. Сервер должен добавить заголовки, если они заданы, к POST-запросу, который он создает для клиента.
<!-- Since payload is missing, the data in the resources is only available through 
the REST API, which helps consolidate authorization and authentication logic. The 
server must append the headers, if any are given, to the POST request that it 
makes to the client. -->
</p>
<p>
Кроме того, сервер можно запросить отправить весь ресурс целиком на указанную точку взаимодействия FHIR. Как правило, это целесообразно для определения правил маршрутизации в пределах управляемой экосистемы, например в учреждении здравоохранения.
<!-- Alternatively, the server can be asked to send the entire 
resource to a nominated FHIR end-point. This is usually appropriate
for defining routing rules within a managed eco-system such
as a healthcare institution.  -->
</p>

<pre class="json">
  "channel": {
    "type": "rest-hook",
    "url": "https://internal.acme.com/research/saturn",
    "payload": "application/xml+json"
  }
</pre>

<p>
Это запрос на то, чтобы сервер направил копию всех соответствующих критериям ресурсов в формате JSON на указанный сервер в качестве операции <a href="http.html#update">Update</a>, используя обозначенный URL в качестве <a href="http.html#root">базового адреса сервиса</a>. Для того чтобы выполнить этот канал, серверу необходимо знать, каким образом выполнить надлежащую проверку подлинности целевого сервера. Это можно выполнить путем предоставления ресурсом subscription дополнительного заголовка для использования сервером, либо, в качестве альтернативы, сервер может быть специально сконфигурирован, чтобы иметь возможность использовать обозначенный сервер.
<!-- This requests that a server forward a copy of any
matching resource in json format to the nominated server as an <a href="http.html#update">Update 
operation</a> using the nominated URL as the <a href="http.html#root">service base</a>. 
In order to execute this channel, the server must know how 
to authenticate appropriately with the destination 
server. This can be done by the subscription resource providing 
an authentication header for the server to use, or 
alternatively, the server may be specifically configured to be able to use
the nominated server. -->
</p>



<h3>WebSockets</h3>

<p>
Подписки создаются исключительно с помощью FHIR REST API. Однако оповещениям нет необходимости использовать REST. В самом деле, некоторые клиенты могут не иметь возможности открыть наружу HTTP-сервер для получения сработавших оповещений. Например чистое клиентское веб-приложение или мобильное приложение могут подписаться на ленту данных без опроса, с помощью операции /history. Это может быть достигнуто с помощью канала уведомлений websocket.
<!-- Subscriptions are created exclusively via the FHIR REST API. But notifications need not 
occur via REST. Indeed, some clients may be unable to expose an outward-facing HTTP 
server to receive triggered notifications. For example, a pure client-side Web app or 
mobile app may want to subscribe to a data feed without polling using the /history 
operation. This can be accomplished using a websocket notification channel. -->
</p>

<p>
Клиент может заявить о своем намерении слушать через веб-сокеты:
<!-- A client can declare its intention to listen via Web Sockets: -->
</p>

<pre class="json">
  "channel": {
    "type": "websocket"
  }
</pre>

<p>
Затем клиент инициирует соединение веб-сокета к серверу по URL-адресу, объявленному в заявлении о соответствии FHIR-сервера (subscriptions/webSocketUrl (todo)). Для прослушивания уведомлений используется простой протокол:
<!-- The client would then initiate a Web Socket connection to the server, at a URL advertised 
in the FHIR server's conformance statement (subscriptions/webSocketUrl (todo)). A simple 
protocol is used to listen for notifications: -->
</p>
<ul>
 <li>Клиент подключается к безопасному веб-сокету по webSocketUrl больницы.</li>
 <li>Клиент устанавливает подлинность сервера, используя указанный сервером протокол веб-сокета (например представление носителя маркера OAuth).</li>
 <li>Клиент отправляет bind :id сообщение через сокет (используя логический идентификатор подписки). Например клиент может отправить bind 123).</li>
 <li>Сервер отвечает  сообщением "bound :id" для подтверждения приема.</li>
 <li>Сервер отправляет сообщение "ping :id" для оповещения клиента каждый раз, когда становится доступным новый результат.</li>
<!--  <li>Client connects a secure Web Socket to the hospital's webSocketUrl.</li>
 <li>Client authenticates to server using a server-specified Web socket protocol (e.g. OAuth bearer token presentation).</li>
 <li>Client sends a bind :id message over the socket (using the logical id of the subscription). For example, the client might issue: bind 123).</li>
 <li>Server responds with a "bound :id" message to acknowledge.</li>
 <li>Server sends a "ping :id" message to notify the client each time a new result is available</li> -->
</ul>

<h3>Email/SMS</h3>

<p>
Клиент может зарегистрироваться на своего пользователя для получения уведомлений по электронной почте:
<!-- A client can register for its user to receive notifications by
email: -->
</p>

<pre class="json">
  "channel": {
    "type": "email",
    "url": "mailto:mt-auburn-results@direct.biliwatch.com",
    "header": "A new bilirubin result has arrived!"
  }
</pre>

<p>
Сервер будет отправлять новое сообщение для каждого соответствующего критериям ресурса. Тело электронного письма может быть пустым или содержать ссылку на поиск или соответствующий ресурс. Какое количество информации предоставлять остается на усмотрение сервера. Электронная почта должна быть надлежащим образом защищена, например с помощью Direct, как указано в правилах действующей юрисдикции.
<!-- The server would send a new message for each matching resource.
The body of the email may be empty, or it may contain a reference
to the search or the matching resource. It is at the discretion
of the server as to how much information to provide. The email
should be secured appropriately, such as using Direct, as specified
by the rules of the applicable jurisdictions. -->
</p>

<p>SMS работает очень похожим образом:
<!-- SMS works very similarly: --></p>

<pre class="json">
  "channel": {
    "type": "sms",
    "url": "tel:+1555-345-5555"
  }
</pre>

<p>
Примечание: SMS-сообщения чрезвычайно ограничены в размере, поэтому полезная нагрузка должна быть установлена в "false".
Вне зависимостри от резамера, большинство серверов откажется отправлять полезную нагрузку через SMS.
<!-- Note: SMS messages are extremely limited in size, so payload should be set to false
Irrespective of size, most servers will refuse to send payloads in SMS for security 
reasons.  -->
</p>

<h3>Обмен сообщениями<!-- Messaging --></h3>

<p>
A client can register for its user to receive notifications by <a href="messaging.html">messaging</a>:
</p>

<pre class="json">
  "channel": {
    "type": "message",
    "url": "http://ehr.example.org/fhir/$process-message"
  }
</pre>
<p>
For each matching resource, a server will send a message to the 
nominated end-point. Most servers will require that the end-point
is white-listed prior to allowing these kinds of subscriptions. 
</p>
<blockquote class="dstu-note">
<a name="dstu"> </a>
<p>
<b>DSTU Note:</b>  The details of the message - mainly the event code - are 
still to be resolved during the trial use period.
</p>
<p>
Feedback is welcome <a href="http://wiki.hl7.org/index.php?title=FHIR_Specification_Feedback_(DSTU_2)">here</a>.
</p>
</blockquote>


</div>
