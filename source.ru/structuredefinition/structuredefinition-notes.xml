<div xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml ../../schema/fhir-xhtml.xsd" xmlns="http://www.w3.org/1999/xhtml">


<h2>Примечания к трактовке:<!-- Interpretation Notes: --></h2>

<ul>

<li>Структура представляется в виде линейного списка элементов. В <code>element.path</code> хранится вся общая структура целиком.<!-- A structure is represented as a flat list of elements. The <code>element.path</code> provides the overall structure. --></li>
<li>Элементы <code>element.short</code>, <code>element.formal</code>, <code>element.comments</code> и <code>element.mapping</code> содержат конкретное определение соответствующего поля для определенного контекста.<!-- <code>element.short</code>, <code>element.formal</code>, <code>element.comments</code> and <code>element.mapping</code> provide the specific definition for the field in a specific context. --></li>
<li>В <code>element.type</code> перечисляются типы, которые могут использоваться для этого элемента. Если указано больше одного типа, значит в элементе предполагается выбор типа, и он должен иметь имя, заканчивающееся на "[x]". Окончание "[x]" сохраняется даже для тех имен элементов, максимальное число которых равно единице. <!-- <code>element.type</code> is used to specify which types may be used for this element. If there is more than one type, the element offers a choice of types and must have a name that terminates in "[x]". 
Names of elements that are choices retain the "[x]" in the name, even if a constraint on such an element limits the number of allowed types down to one. --></li>
<li>Когда для создания ограничений на взаимосвязи между содержимым описательной части и содержимым элементов данных используется xpath, то элемент, по отношению к которому выражено правило, и будет тем, о котором будет сообщаться в ошибке или предупреждении. 
<!-- When using xpath to make constraints about the relationship between the contents of the narrative and the contents of the data elements, the element against which the rule is expressed is the one against which the error or warning will be reported by a validator. --></li>
<li>Когда xpath-ограничения относятся к элементам, которые предлагают выбор типа, необходимо использовать полностью развернутое имя (включая фактический тип), а не имя, оканчивающееся на "[x]".
<!-- When xpath constraints refer to elements that offer a choice of types, the statement must use the fully expanded name (including the actual type), not the name ending in "[x]". --></li>
<li>Для xpath-ограничений префикс "f" должен использоваться для "http://hl7.org/fhir", и "h" для "http://www.w3.org/1999/xhtml". XPath-ограничения пишутся для XML-представления, однако правила, которые они описывают, ДОЛЖНЫ выполняться и для других представлений тоже.
<!-- For xpath constraints, the prefix "f" should be used for "http://hl7.org/fhir", and "h" for "http://www.w3.org/1999/xhtml". XPath constraints are written against the XML representation, but the rules they describe SHALL be true in any other representation as well --></li>
<li>Элемент condition используется для объявления о том, что ограничение, определенное на другом элементе, влияет на допустимое кардинальное число этого элемента.
<!-- The condition element is used to assert that a constraint defined on another element affects the allowed cardinality of this element. --></li>
</ul>

<h3>Различные типы структур<!-- Different types of Structure --></h3>
<p>
<code>StructureDefinition.type</code> означает, какой вид структуры задается. Есть 5 видов структур:
<!-- <code>StructureDefinition.type</code> indicates what kind of structure is being defined. There are 5 kinds of structures: -->
</p>
<ol>
 <li><b>abstract</b>: "Абстрактный тип" - один из основополагающих базовых типов, определяемых в рамках спецификации (например <a href="resource.html">Resource</a>)
 <!-- <b>abstract</b>: "Abstract type" - one of the underlying base types defined as part of the specification (e.g. <a href="resource.html">Resource</a>) --></li>
 <li><b>type</b>: "Тип данных" - примитивная или комплексная структура, которая задает набор элементов данных, большинство из которых определены в разделе <a href="datatypes.html">Data Types</a>
 <!-- <b>type</b>: "Data Type" - a primitive or complex structure that defines a set of data elements, most of which are defined in the <a href="datatypes.html">Data Types</a> section --></li>
 <li><b>resource</b>: "Ресурс" - ресурс, определенный FHIR-спецификацией (см. <a href="resourcelist.html">перечень ресурсов</a>)
 <!-- <b>resource</b>: "Resource" - A resource defined by the FHIR specification (see the <a href="resourcelist.html">resource list</a>) --></li>
 <li><b>constraint</b>: "Ограниченный тип" - набор ограничений ресурса или типа данных, которые описывают его конкретное применение
 <!-- <b>constraint</b>: "Constrained Type" - A set of constraints on a resource or data type that describe how it is used for a particular use --></li>
 <li><b>extension</b>: "Определение расширения" - определение расширения, которое может использоваться в FHIR-ресурсе (или набор ограничений над существующим расширением)<!-- <b>extension</b>: "Extension Definition" - A definition of an extension that can be used in a FHIR resource (or a set of constraints on an exsting extension) --></li>
</ol>
<p>
Первые 3 типа задаются только спецификацией FHIR. Типы 4 и 5 используются в профилях и руководствах по реализации и могут публиковаться любым реализатором спецификации.
<!-- The first 3 types can only be defined by the FHIR specification. Types 4 and 5 are used in profiles and implementation guides, and may be published
by any implementer of the specification.  -->
</p>

<h3>Правила для структур ограничивающего типа  (Constrained Types)<!-- Rules for Constrained Types --></h3>
<p>
Когда типом структурного определения является "constraint" или "extension", применяются следующие правила:
<!-- When the type of a structure definition is either a "constraint" or an "extension", then the following rules apply: -->
</p>
<ul>
 <li>В структуре обязательно необходимо указать базовый ресурс, на котором она построена
 <!-- The structure must nominate a base resource from which it is derived --></li>
 <li>structure definition не может вводить новые элементы или домены значений, которые не допустимы в этой структуре - например структура должна быть истинно ограничивающей и всё, что соответствует описанию этой структуры также должно быть допустимым в соответствии с описанием базовой структуры
 <!-- The structure definition cannot introduce any new elements or value domains that are not valid in the structure - e.g. the structure must be a true constraint, and anything that meets the description of this structure must also be valid following the description of the base structure --></li>
 <li>На практике это означает, что:<!-- In practice, this means that: -->
   <ul>
     <li>не могут вводиться новые пути, которых нет в базовой структуре<!-- no new paths may be introduced that are not found in the base structure --></li> 
     <li>список типов для элемента должен совпадать или быть подмножеством списка типов для этого же элемента в базовой структуре<!-- the list of types for an element must be the same or a subset of the list of types for the same element in the base structure --></li> 
     <li>Определение может быть изменено в производной структуре, но должно оставаться логически непротиворечивым с определением в базовом, например базовый элемент может быть определен как "Result value", и эта структура может определить его как "Result value", а эта структура может определить его как "Plasma Cholesterol Test Value", но не как "Result status".
	 <!-- The definition can be changed in the derived structure, but it must still be logically consistent with the definition in the base. e.g. the base element may be defined as "Result value" and this structure could define it as "Plasma Cholesterol Test Value", but not "Result status". --></li>
     <li>Кардинальное число должно быть подмножеством разрешенного кардинального числа в базовой структуре, т. е. его минимум должен быть >=  базовому минимуму, а максимум должен быть &lt;= базовому максимуму
	 <!-- The cardinality must be a subset of the allowable cardinality in the base structure i.e. the minumum must be >= the base minimum, and the maximum must be &lt;= the base maximum --></li>
   </ul>
  </li>
  <li>Обратите внимание, что благодаря слайсингу одному пути может соответствовать больше одного элемента. Более подробную информацию см. в <a href="profiling.html">профилировании ресурсов</a>
  <!-- Note that because of slicing, there can be more than element for the same path. For details, see <a href="profiling.html">Profiling resources</a> --></li>
</ul>
  
<!-- 
<li>For an extension definition, the cardinality constraints are limits on the constraints of any reference to the extension in a profile. 
For example, if the minimum cardinality of an extension is 1 when it is defined, then any profile that includes that extension in the instance
SHALL include it with a minimum cardinality of 1 and therefore any instance that conforms to the profile SHALL include the extension. Note, however,
that if the extension is  directly referenced in an instance rather than applied through a profile, the minimum cardinality doesn't apply, 
though the maximum one still does.
</li>  
<li>For an element with a maximum cardinality of 1, there can only be one entry in the value list, which is either a literal fixed type (with an element name matching the type of the fixed value) or a name,
  which is a reference to a named constraint pattern. If the element has a maximum cardinality of &gt;1, then there can be multiple values - again, either fixed values with a type or a named constraint. 
  Each of these appears in the list with the order and cardinality specified. By this means, a list may be "sliced" into a series of different components.</li>
--> 
  
<h3>Распространенные адресаты мэппинга<!-- Common Mapping Targets --></h3>
<p>
В структурах есть возможность мапить элементы на концепты в других системах определений. Они, как правило, используются для мэппинга элементов на локальные модели реализации, пути данных и концепты. Однако они также используются для мэппинга на другие стандарты и опубликованные справочники. Вот стандартные URI распространенных адресатов мэппинга:
<!-- Structures are able to map elements to concepts in other definition systems. Generally these are used to 
map the elements to local implementation models, data paths, and concepts. However they are also used to map
to other standards and published terminologies. These are the standard URIs used for common targets of the 
mapping: -->
</p>

<table class="lines">
  <tr><td>http://loinc.org</td><td>LOINC code for the element</td></tr>
  <tr><td>http://snomed.info</td><td>SNOMED CT code for the element</td></tr>
  <tr><td>http://hl7.org/v3</td><td>RIM mapping</td></tr>
  <tr><td>http://hl7.org/v2</td><td>v2 mapping</td></tr>
  <tr><td>http://nema.org/dicom</td><td>DICOM tag mapping</td></tr>
  <tr><td>http://w3.org/vcard</td><td>vCard equivalent field</td></tr>
  <tr><td>http://ihe.net/xds</td><td>XDS metadata equivalent</td></tr>
</table>

<!--
<h2>Profiled FHIR</h2>
<p>
If a profile is unambiguous, then the FHIR profile tooling (ref to be provided when the tooling exists) 
is able to generate reference implementation based object models that express 
the profiled model natively, where the object interface does not include 
prohibited elements, treats declared extensions as primary properties and 
slices lists according to the profile. This eases the burden on an implementer, 
though this object model can only be used with a sub-set of the possible resources. <!--only if it enforces maxOccurs.  Extra elements can be mapped into extensions -!->
</p>
<p>
The tooling is also able to generate bi-directional transforms between the 
<a href="formats.html">normal XML format</a> and an XML representation of this 
profiled object model and schema for this profiled XML representation. 
This XML form has extensions promoted into the primary XML form by using the 
extension code as the XML name and sliced lists are renamed to use the 
Profile.resource.element.name as the XML element name. Profiles are only suitable
for this use if they ensure that there are no clashing extension names when
the extension definition spaces are ignored and that the sliced list names are 
appropriate.<!-- Any reason we limit this to only XML? - because transforms are XML things -!->
</p>

<p>
Implementations are allowed to exchange this profiled XML format. Implementations
that do so are not fully conformant to FHIR; instead they can claim to be conformant
to "Profiled FHIR". Implementations should consider carefully before adopting this 
approach; while it will reduce the amount of work required to initially implement 
particular profiles, it will increase the amount of work required to exchange this
data with other communities or to re-use tooling and applications that are also 
used in other contexts. This cost should particularly be considered in light of the
fact that the previously discussed tooling allows applications to be written as 
though they are dealing with "Profiled FHIR" instances when they are in fact sending
and receiving fully conformant FHIR instances.
</p>
-->

</div>
