<div xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/1999/xhtml ../../schema/fhir-xhtml.xsd" xmlns="http://www.w3.org/1999/xhtml">

<a name="order"> </a>
<h2>Порядок пунктов списка<!-- List Order --></h2>
<p>
Все списки считаются упорядоченными - порядок, в котором пункты в буквальном смысле появляются в списке, может быть важным компонентом смыслового значения списка. Изменение порядка следования пунктов в списке может изменить смысл списка.
<!-- All lists are considered ordered - the order in which items literally 
appear in the list may be an important part of the meaning of the list. 
Reordering the items in a list may change the meaning of the list.  -->
</p>
<p>
В то время как список всегда содержит упорядоченный набор пунктов, важность порядка может быть неизвестна или незначительна. В качестве примера рассмотрим список пациентов, которых должен посетить врач. Пациенты в этом списке могут идти в том порядке, в котором их необходимо посетить, либо это может быть неотсортированный список пациентов для посещения в любом порядке.
<!-- While a list always contains an ordered set of items, the significance
of the order may be unknown, or it may be insignificant. As an 
example, consider a list of patients for a practitioner to visit.
The list may be in order, where the patients are to be visited in
the stated order, or just an unsorted list of patients to be visited
in any order. -->
</p>
<p>
В ресурсе List есть свойство <code>orderedBy</code>, которое, если присутствует, определяет значение порядка следования пунктов. Отметьте, однако, что смысл порядка следования может вытекать неявно и без указания в элементе <code>orderedBy</code>.
<!-- The list resource has a property <code>orderedBy</code> that, if
present, specifies the meaning of the item order. Note, though,
that the meaning of the order may be known implicitly rather 
than specified in the <code>orderedBy</code> element. -->
</p>
<p>
Приложениям НЕ СЛЕДУЕТ менять порядок элементов в списке, если только они не понимают влияние этого на смысл списка.
<!-- Applications SHOULD NOT reorder the elements in a list unless they
understand the impact of this on the meaning of the list. -->
</p>

<a name="status"> </a>
<h2>Вид использования списка и удалённые пункты<!-- List Mode &amp; Item Deleted --></h2>

<p>
Имеется несколько различных видов использования ресурса List:
<!-- There are several different kinds of uses for a List resource: -->
</p>
[%codelist http://hl7.org/fhir/ValueSet/list-mode%]

<p>
Наиболее распространённым видом использования является "моментальный снимок" - это список, правильный в контексте своего использования, но не являющийся текущим или поддерживаемым вне этого контекста; например медикаменты при выписке в выписном эпикризе. Обратите внимание, что эти списки обычно имеют статуст "текущих" - они были текущими на момент своего создания. Некоторые виды списков могут явным образом устаревать (в частности, если режим = working), однако большинство списков не будет поддерживаться после создания.
<!-- The most common mode is "snapshot" - a list that is accurate 
within the context it is used in but not current or maintained
after that; e.g., medications on discharge in a discharge summary.
Note that these lists usually have a status of 'current' - they
were current when they were prepared. Some kinds of lists may 
be explicitly retired (particularly if mode = working), but most 
will not be maintained after creation.  -->
</p>
<p>
Список изменений может содержать удалённые пункты. Примерами списков изменений будут согласованный список аллергий, список медикаментов при выписке и список с новыми, обнволёнными или удалёнными пунктами в нем - хотя они могут не быть списками, которые содержат изменения (по решению реализаторов). Для того чтобы гарантировать безопасность обработки списка, у всех пунктов, которые были удалены, значение элемента deleted должно быть установлено в "true".
<!-- A change list may include deleted items. Some examples of change lists are 
a reconciled list of allergies, a discharge medication list and a list 
with new, updated and deleted items in it - though these may not be lists that 
include changes (this is an implementation decision). In order to ensure that 
the list is safe to process, any item where the flag implies that the 
item has actually been deleted SHALL have the deleted element set to true.  -->
</p>
<p>
Обратите внимание, что нет никакого вывода о статусе ресурса, который был удален. Единственное утверждение, которое делается - что этот ресурс был убран из списка. Однако приложениям следует гарантировать, что добавление или удаление пунктов в списке по смыслу не противоречит логическому статусу соответствующего ресурса и его содержимого.
<!-- Note that there is no implication about the status of a resource that has been deleted.
The only statement that is made is that the resource has been dropped from the list. 
However applications should ensure that the implication of adding or deleting items
from the list is consistent with the logical status of the resource and its contents. -->
</p>
<p>
Корректное использование списка в режиме List.mode = "changes" с удаленным ресурсом - это список медикаментов в discharge summary. См. пример med-list". Использование было бы неправильным, если бы список был действующим списком медикаментов пациента в клинической системе отслеживания, и флаги пунктов списка использовались бы для осуществления отслеживания истории версий внутри ресурса.
<!-- A proper use of List.mode = "changes" with a deleted resource is in a medications list 
for a discharge summary. See Example "med-list". An improper use would be if the list 
was a working list of patient medications in a clinical tracking system, and list item
flags were used to implement version tracking history within the resource. -->
</p>

<a name="narrative"> </a>
<h2>Содержимое описательной части<!-- Narrative Content --></h2>

<p>
Описательная часть ресурса List должна содержать сводку элементов item в списке, их ключевую информацию наряду с человекочитаемой сводкой их флагов (если они есть). Описательная часть может генерироваться из содержимого data и/или описательных частей ресурсов, входящих в список, либо это может быть описательная часть, написанная человеком, которая частично или полностью соответствует структурированным данным в связанных ресурсах, либо описательная часть, написанная человеком, может быть единственным содержимым, если в списке нет записей (что приравнивается к документу с единственным разделом - описательной частью).
<!-- The narrative portion of the List resource should contain a summary 
of the items in the list, their key information, along with a human-readable 
summary of their flags (if present). The narrative may be generated
from the data content and/or narrative of the resources referred to in
the list, or it may be a narrative written by a human, which is partially or
completely matched by structured data in the linked resources. The human
written narrative may be the only content if the list has no entries
(which would equate to a narrative only section in a document). -->
</p>
<p>
Рекомендуемый подход - HTML-таблица, хотя это и не обязательно. 
Каждый List.item должен появиться в описательной части ресурса. Т. е. НЕ ДОЛЖНО требоваться извлечь items списка, чтобы получить человекочитаемое отображение его содержимого. Кроме того, если List.text.status = "generated", тогда описательная часть не должна предполагать, что список содержит items, для которых нет соответствующих элементов List.item.
Если в списке если флаги, представление на экране должно использовать понятные визуальные подсказки (границы, линии, маркеры списков и т. п.), чтобы гарантировать, что читатели не запутаются, какие флаги к каким пунктам относятся, на маленьких экранах (например для предотвращения переносов, разносящих флаги и пункты по разным местам экрана).
<!-- An HTML table is the recommended approach, though this is not required.
Each List.item should appear in the narrative for the resource; i.e. it 
SHALL NOT be necessary to retrieve the list items in order to have a 
human-readable rendering of the content. In addition, if the List.text.status is 
"generated", then the narrative should not suggest the list 
contains items for which there are no corresponding List.item elements. 
If the list has flags, the representation should make clear use of visual 
hints (borders, lines, bullet marks, etc.) to ensure that human readers 
do not get confused about which flags belong with which item on space-poor 
displays (e.g. to prevent wrapping from separating the flags from the items). -->
</p>

<p>
Обратите внимание, что когда ресурс List используется в <a href="documents.html">документе</a>, описательная часть этого списка входит в заверенное содержимое документа.
<!-- Note that when a List resource is used in a <a href="documents.html">Document</a>,
the narrative of the list is part of the attested content of the document. -->
</p>

<p>
В динамической среде содержание описательной части списка будет ограничено версией связанных ресурсов на момент последнего обновления списка. А может быть даже и раньше, если описательная часть не была обновлена и не отражает последние версии всех ресурсов, на которые есть ссылки, при каждом их обновлении. Лучшим способом будет для действующих 'working' списков обновлять описательную часть, чтобы она отражала самое свежее содержимое всех перечисленных элементов, каждый раз, когда список пересматривается. Следовательно, на списки нельзя полагаться как на представление ссылочного содержимого в реальном времени. Есть несколько возможных подходов к решению этой проблемы:
<!-- In a dynamic environment, the narrative content of the list will be limited to the
version of the linked resources at the time the list was last updated. It may be
even earlier if the narrative isn't updated to reflect the most recent version
of all referenced resources at each update.  Best practice for 'working' lists is to update 
the narrative to reflect the most recent content of all list elements each time the list
is revised.  Lists should therefore not be
relied on as a real-time view of the referenced content.  There are a few
possible approaches to work around this issue: -->
</p>
<ul>
 <li>Предоставлять минимум информации о перечисленных ресурсах, возможно ограничиваясь только ссылкой. (Не рекомендуется, так как это существенно ограничивает полезность описательной части и, в частности, проблематично для таких вещей, как документы, где, возможно, единственным заверенным содержимым будет только описательная часть ресурса List)
<!-- Provide minimal information about the listed resources, possibly limited to only a link.  
 (Not recommended as this severely limits the usefulness of the narrative and is particularly
 problematic for things like documents where the only attested content might be the List
 narrative) --></li>
 <li>Включать только "генерируемое" описание, чтобы устройство поиска могло просто сгенерировать собственный "текущий" список, запрашивая ресурсы по ссылками и игнорируя фиксированное описание.
<!-- Include only "generated" narrative, so the retriever can easily generate their own "current"
 view of the list by retrieving the referenced resources, ignoring the fixed narrative. --></li>
 <li>Сервер, на котором размещается список, может подписаться на все упоминаемые ресурсы и автоматически обновлять описательную часть при каждом изменении ресурсов, на которые даются ссылки (или, по крайне мере, делать это на полурегулярной основе)
<!-- The server hosting the list can subscribe to all referenced resources and auto-update the
 narrative each time one of the referenced resources changes (or at least on a semi-frequent basis) --></li>
</ul>

<a name="emptyReason"> </a>
<h2>Причина отсутствия<!-- Empty Reason --></h2>

<p>
Если список пустой, этому может быть несколько различных причин. Например:
<!-- If the list is empty, there could be several different reasons why this is so. For example: -->
</p>
<ul>
 <li>Нет соответствующих записей для этого списка (т. е. у пациента нет известных медикаментов/аллергий/истории)
<!-- There are no appropriate entries for the list (i.e. the patient has no known medications/allergies/history) --></li>
 <li>Отправитель (человек или система) считал, что они не были связаны с этим контекстом медицинской помощи пациенту (как правило по причинам, связанным с неприкосновенностью частной жизни)
<!-- The sender (human or system) deemed that these were not related to this context of patient care (usually for privacy related reasons) --></li>
 <li>Исходная система не поддерживает этот тип записей
<!-- The source system doesn't support these type of entries --></li>
 <li>Информация для заполнения списка не была собрано - т. е. не опросили ("Not asked")
<!-- The information to populate the list wasn't gathered - i.e. "Not asked" --></li>
</ul>
<p>
Учитывая эти возможности и общий и важный первый случай, исходные системы ДОЛЖНЫ предоставлять причину в случае пустого списка. Из-за важности этого случая необходимо использовать особое значение <a href="valueset-list-empty-reason.html">"nil-known"</a>, когда нет (существенных) записей в этом контексте медицинской помощи. Обратите внимание, что это понятие иногда описывается по-разному, например "пациент отрицает прием медикаментов" или "пациент не был в состоянии указать какую-либо значимую историю болезни".
<!-- Given these possibilities, and the common and significant first case, source systems SHOULD 
provide an empty reason if the list is empty. Because of the importance of this case, the 
<a href="valueset-list-empty-reason.html">special value "nil-known"</a> should be used when 
there are no (significant) entries in this context of care. Note that this concept is 
sometimes described differently, such as "patient denies taking medications", or 
"patient was unable to identify any relevant medical history". -->
</p>
<p>
При получении списка системы не должны делать предположение, что этот список является полным (некоторые записи могут не быть получены по разным причинам), если только не имеют место конкретные договоренности между торговыми партнерами или, если список пустой, что нет известных (nil known), если только не присутствует код "nil-known".
<!-- When receiving a list, systems should not assume that the list is complete (some entries may 
have been withheld for a variety of reasons), unless there are specific trading partner
arrangements in place or, if the list is empty, that there are actually nil known, 
unless the "nil-known" code is present. -->
</p>
<p>
Если список пустой, описательная часть должна содержать текст, эквивалентный указанной причине в элементе empty.
<!-- If the list is empty, the narrative should contain text equivalent to the empty reason. -->
</p>

</div>
