<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project name="org.hl7.fhir.tools" basedir=".." default="local-publish-ig" xmlns:ivy="antlib:org.apache.ivy.ant">
  <property name="guidename" value="???"/>
  <property name="spec" value="http://hl7-fhir.github.io/"/>
  <!-- Where the main FHIR build publish folder is -->
  <property name="dir.publish" value="../../publish"/>
  <!-- Project-specific inputs -->
  <property name="dir.src" value="src"/>
  <property name="dir.src.images" value="${dir.src}/images"/>
  <property name="dir.src.pagecontent" value="${dir.src}/pagecontent"/>
  <property name="dir.src.resources" value="${dir.src}/resources"/>
  <!-- Working area -->
  <property name="dir.alltemp" value="temp"/>
  <property name="dir.imports" value="${dir.alltemp}/imports"/>
  <property name="dir.ivy" value="${dir.alltemp}/ivy"/>
  <property name="dir.pages" value="${dir.alltemp}/pages"/>
  <property name="dir.pageassets" value="${dir.pages}/assets"/>
  <property name="dir.pagedata" value="${dir.pages}/_data"/>
  <property name="dir.pageincludes" value="${dir.pages}/_includes"/>
  <property name="dir.resources" value="${dir.alltemp}/resources"/>
  <property name="dir.qa" value="${dir.alltemp}/qa"/>
  <property name="dir.temp" value="${dir.alltemp}/temp"/>
  <property name="dir.txcache" value="txcache"/>
  <!-- Standard infrastructure (generally the same across all IGs) -->
  <property name="dir.framework" value="framework"/>
  <property name="dir.framework.assets" value="${dir.framework}/assets"/>
  <property name="dir.framework.includes" value="${dir.framework}/includes"/>
  <property name="dir.framework.templates" value="${dir.framework}/templates"/>
  <property name="dir.xslt" value="${dir.framework}/xslt"/>
  <!-- Where the generated site goes -->
  <property name="dir.output" value="website"/>
  <!-- -->
  <condition property="offline">
    <matches pattern="--offline" string="${args}"/>
  </condition>
  <path id="saxon.path">
    <fileset dir="${dir.imports}">
      <include name="*.jar"/>
    </fileset>
  </path>
  <property name="saxon.classname" value="net.sf.saxon.TransformerFactoryImpl"/>
  <property name="ivy.install.version" value="2.4.0"/>
  <property name="ivy.jar.file" value="${dir.ivy}/ivy.jar"/>
  <target name="dir-setup" description="--> create directories">
    <delete dir="${dir.pages}"/>
    <delete dir="${dir.qa}"/>
    <delete dir="${dir.temp}"/>
    <delete file="${dir.alltemp}/${guidename}.json"/>
    <mkdir dir="${dir.alltemp}"/>
    <mkdir dir="${dir.imports}"/>
    <mkdir dir="${dir.ivy}"/>
    <mkdir dir="${dir.pages}"/>
    <mkdir dir="${dir.pageassets}"/>
    <mkdir dir="${dir.pagedata}"/>
    <mkdir dir="${dir.pageincludes}"/>
    <mkdir dir="${dir.qa}"/>
    <mkdir dir="${dir.resources}"/>
    <mkdir dir="${dir.temp}"/>
    <mkdir dir="${dir.txcache}"/>
    <mkdir dir="${dir.output}"/>
    <echo message="${dir.temp}"/>
  </target>
  <target name="download-ivy" depends="dir-setup" unless="offline" description="--> download ivy">
    <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true"/>
  </target>
  <target name="install-ivy" depends="download-ivy" description="--> install ivy">
    <path id="ivy.lib.path">
      <fileset dir="${dir.ivy}" includes="*.jar"/>
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
  </target>
  <target name="fetch-imports" unless="offline" depends="install-ivy" description="--> resolve dependencies, compile and run the project">
    <ivy:resolve transitive="false" file="${dir.framework}/ivy.xml"/>
    <ivy:retrieve type="jar,bundle" sync="true" pattern="${dir.imports}/[artifact]-[revision].[ext]"/>
  </target>
  <target name="local-setup" depends="dir-setup" description="--> grabs igpublisher from local build">
    <copy file="${dir.publish}/org.hl7.fhir.igpublisher.jar" todir="${dir.alltemp}"/>
  </target>
  <target name="travis-setup" depends="dir-setup" description="--> Installs Jekyll, grabs publisher from CI website">
    <get src="http://hl7-fhir.github.io/org.hl7.fhir.igpublisher.jar" dest="${dir.alltemp}"/>
  </target>
  <target name="publisher-setup" depends="fetch-imports"  description="--> Generate setup files, then run IG build">
    <xslt in="${dir.src}/${guidename}.xml" out="${dir.resources}/${guidename}.xml" style="${dir.xslt}/fixIg.xslt" classpathref="saxon.path">
      <factory name="${saxon.classname}"/>
    </xslt>
    <copy todir="${dir.resources}">
      <fileset dir="${dir.src.resources}"/>
    </copy>
    <copy todir="${dir.pages}">
      <fileset dir="${dir.src.images}"/>
      <file file="${basedir}/${dir.framework.assets}/js/jquery.js"/>
      <file file="${dir.src}/index.html"/>
    </copy>
    <copy todir="${dir.pageassets}">
      <fileset dir="${dir.framework.assets}" includes="**/*.*"/>
    </copy>
    <copy todir="${dir.pageincludes}">
      <fileset dir="${dir.framework.includes}"/>
    </copy>
    <xslt basedir="${dir.src.pagecontent}" destdir="${dir.pageincludes}" includes="*.xml" style="${dir.xslt}/processPages.xslt" classpathref="saxon.path">
      <factory name="${saxon.classname}"/>
      <mapper type="glob" from="*.xml" to="content-*.html"/>
    </xslt>
    <xslt in="${dir.src}/${guidename}.xml" out="${dir.alltemp}/${guidename}.json" style="${dir.xslt}/igToConfig.xslt" classpathref="saxon.path">
      <factory name="${saxon.classname}"/>
      <param name="spec" expression="${spec}"/>
    </xslt>
    <xslt in="${dir.src}/${guidename}.xml" out="${dir.pagedata}/pages.json" style="${dir.xslt}/igToData.xslt" classpathref="saxon.path">
      <factory name="${saxon.classname}"/>
    </xslt>
    <xslt in="${dir.src}/${guidename}.xml" out="${dir.pageincludes}/content-toc.html" style="${dir.xslt}/igToTOC.xslt" classpathref="saxon.path">
      <factory name="${saxon.classname}"/>
    </xslt>
    <xslt in="${dir.src}/${guidename}.xml" out="${dir.pages}/empty.txt" style="${dir.xslt}/igToPages.xslt" classpathref="saxon.path">
      <factory name="${saxon.classname}"/>
    </xslt>
    <delete file="${dir.pages}/empty.txt"/>
  </target>
  <target name="publish-ig" depends="publisher-setup"  description="--> Run the IG build">
    <java jar="${dir.alltemp}/org.hl7.fhir.igpublisher.jar" fork="true" failonerror="true" maxmemory="1024m">
      <arg line="-ig ${basedir}/${dir.alltemp}/${guidename}.json"/>
    </java>
  </target>
  <target name="local-publish-ig" depends="local-setup, publish-ig"  description="--> Target to use when building Locally"/>
  <target name="travis-publish-ig" depends="travis-setup, publish-ig"  description="--> Target to use when building on Travis"/>
  <target name="clean">
    <delete dir="${dir.alltemp}"/>
    <delete dir="${dir.output}"/>
  </target>
  <target name="clean-ivy" description="--> clean the ivy installation">
    <delete dir="${ivy.jar.dir}"/>
  </target>
  <target name="clean-cache" depends="install-ivy" description="--> clean the ivy cache">
    <ivy:cleancache/>
  </target>
</project>
