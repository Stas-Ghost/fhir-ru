// Looking in the future to create this kind of DSLs for other conformance resources, we need a general
// way to specify the metadata of a conformance resource. So rather than use the = and reserve that for
// just name, maybe better to start doing something that can accomodate other metadata too
// I do realize stuff like "contact" are a pain inline
map "http://hl7.org/fhir/StructureMap/cda-any"
	(name: "V3/FHIR Mappings: ANY", status: "draft");

// When trying to grasp the mapping syntax, the "uses.....as" kept confusing me.
// I propose that we use "uses" as a kind of short-hand for the full canonical url that works for both 
// types and other maps(and remove the needless designation "as input", "as output")
// I have added a syntax "= XXXX" at the end to give a short hand for the canonical url. This is also
// useful in case two types that are used have the same name (different base, different canoninical url, 
// but same id). Of course, if you don't mention the "= XXXX", the id is used as the default name
uses "http://hl7.org/fhir/StructureDefinition/cda-ANY" = ANY;
uses "http://hl7.org/fhir/StructureDefinition/Element";

group ANY2Element 
	// input....as, I find confusing, so I'd rather move the as part to the front
	source src : ANY;
	target tgt : Element;

	any.nf: 
		for src.nullFlavor as nf make 
			new tgt.extension as ex, 		// explicitly designate as a creation
			ex.url = "http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor",
			ex.value = nf;  // nothing more after this
end-group;
	
// Note that I added semicolons, I think that's just to make the syntax less ambiguous to where statements
// end and start of you split them over multiple lines.