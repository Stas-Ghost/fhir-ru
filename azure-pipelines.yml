trigger:
- master
queue:
  name: Default
steps:
- bash: |
   set -ev
   git fetch --depth 20
   
   [ -d publish ] && rm -rf publish
   
   NAME="Continuous Integration Build"
   SVNREV=$(git rev-parse --short HEAD)
   
   antBuild (){
     ant -Dargs="./publish.sh -svn $SVNREV -name \'$NAME\' -url http://build.fhir.org/  -post-pr"
       checkStatus
   }
   
   checkStatus (){
     nf=`find publish -maxdepth 1 -type f | wc -l`
     if [ "$nf" -lt "100" ] ; then
        echo "< 100 files produced: bailing!"
        exit 1
     fi
     if [ $? -eq 0 -a ! -f fhir-error-dump.txt ]
     then
       echo "Build status OK"
     else
       echo "error dump:"
       cat fhir-error-dump.txt
       exit 1
     fi
   }
   
   antBuild
  displayName: 'Build via build.sh'

- bash: |
   SVNREV=$(git rev-parse --short HEAD)
   LASTMSG=$(git log --oneline --graph HEAD~1..)
   
   ~/.local/bin/zulip-send  \
   --user fhir-bot@fhir.me  \
   --api-key $(ZULIP_API_KEY) \
    --site https://chat.fhir.org \
   --stream  "committers/notification" \
   --subject "FHIR Build Status" \
    --message "Build success :thumbs_up:! @${SVNREV} [build logs](https://dev.azure.com/fhir-build/build.fhir.org/_build/results?buildId=${BUILD_BUILDNUMBER}&_a=summary&view=logs)
   \`\`\`
   ${LASTMSG}
   \`\`\`
   "
  displayName: 'Success Notification'

- bash: |
   SVNREV=$(git rev-parse --short HEAD)
   
   FAIL_MSG=$(cat publish/simple-error.txt)
   
   ~/.local/bin/zulip-send  \
   --user fhir-bot@fhir.me  \
   --api-key $(ZULIP_API_KEY) \
    --site https://chat.fhir.org \
   --stream  "committers/notification" \
   --subject "FHIR Build Status" \
    --message "Build failed :thumbs_down:! @${SVNREV} [build logs](https://dev.azure.com/fhir-build/build.fhir.org/_build/results?buildId=${BUILD_BUILDNUMBER}&_a=summary&view=logs)
   
   *${FAIL_MSG}*"
  displayName: 'Failure Notification'
  condition: failed()

- bash: |
   echo "Will publish!"
   
   PASSPHRASE=$(DEPLOY_KEY_PASSPHRASE)
   
   echo $DEPLOY_KEY_ENCRYPTED | openssl  enc -aes-256-cbc -d  -pass pass:$PASSPHRASE  -base64 -A > ${BUILD_REPOSITORY_LOCALPATH}/deploy.rsa
   chmod 400 ${BUILD_REPOSITORY_LOCALPATH}/deploy.rsa
   git config --global user.email "latest@fhir.me"
   git config --global user.name "FHIR Build"
   echo -e "Host github.com\n  IdentityFile ${BUILD_REPOSITORY_LOCALPATH}/deploy.rsa" > ~/.ssh/config
   mkdir fhir-ru.github.io
   cd fhir-ru.github.io
   git init
   git remote add origin git@github.com:fhir-ru/built-test
   touch .test
   cp -r ../publish/* .
   ../remove_files_larger_than_100mg_for_gh_pages_compatibility.sh
   git add -A .
   git commit -m "Azure DevOps docs build"
   GIT_SSH_COMMAND='ssh -i ${BUILD_REPOSITORY_LOCALPATH}/deploy.rsa'
   git push -f origin master
   rm ${BUILD_REPOSITORY_LOCALPATH}/deploy.rsa
  workingDirectory: publish

  displayName: Publish
