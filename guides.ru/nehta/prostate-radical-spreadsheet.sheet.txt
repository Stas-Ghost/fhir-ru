
=== Sheet Bindings =====================================

 -- Row 1 -----------------------------------
  Binding Name = SeminalVesiclesMacro
  Binding = value set
  Reference = valueset-nehta-present-absent-na
  Definition = A code that idicates the presence (partially or completely resected) or absence of seminal vesicles

 -- Row 2 -----------------------------------
  Binding Name = LymphNodes
  Binding = value set
  Reference = valueset-nehta-present-absent-na
  Definition = A code that indicates if lymph nodes were present or absent

 -- Row 3 -----------------------------------
  Binding Name = LymphNodesLaterality
  Binding = value set
  Reference = valueset-nehta-laterality
  Definition = A code that indicates the laterality of lymph nodes

 -- Row 4 -----------------------------------
  Binding Name = TumourType
  Binding = value set
  Reference = valueset-nehta-prostate-rad-tumour-type
  Definition = A code for tumout type from a multi selection value list  (select all that apply)

 -- Row 5 -----------------------------------
  Binding Name = TumourLocationQuadrant
  Binding = value set
  Reference = valueset-nehta-nodule-location
  Definition = A code from a single selection value list for the largest nodule located by quadrant

 -- Row 6 -----------------------------------
  Binding Name = TumourLocationPlane
  Binding = value set
  Reference = valueset-nehta-prostate-rad-nodule-plane
  Definition = A code from a single selection value list for the largest nodule located by plane

 -- Row 7 -----------------------------------
  Binding Name = TumourLocationOtherNodules
  Binding = value set
  Reference = valueset-nehta-none-identified-present
  Definition = A code from a single selection value list to indicate other nodules >10mm in diameter

 -- Row 8 -----------------------------------
  Binding Name = TumourLocationOtherNodulesQuadrant
  Binding = value set
  Reference = valueset-nehta-nodule-location
  Definition = A code from a multi selection value list (select all that apply) to indicate other nodule locations by quadrant

 -- Row 9 -----------------------------------
  Binding Name = TumourLocationOtherNodulesPlane
  Binding = value set
  Reference = valueset-nehta-prostate-rad-nodule-plane
  Definition = A code from a multi selection value list (select all that apply) to indicate other nodule locations by plane

 -- Row 10 -----------------------------------
  Binding Name = ExtraprostaticExtension
  Binding = value set
  Reference = valueset-nehta-notidentified-present-indeterminate
  Definition = A code from a single selection value list for the extraprostatic extension

 -- Row 11 -----------------------------------
  Binding Name = ExtraprostaticExtensionExtent
  Binding = value set
  Reference = valueset-nehta-focal-non-focal
  Definition = A code from a single selection value list for the extraprostatic extension extent

 -- Row 12 -----------------------------------
  Binding Name = ExtraprostaticExtensionLocations
  Binding = value set
  Reference = valueset-nehta-prostate-rad-tumour-locations
  Definition = A code from a multi select value list (select all that apply) for the location(s) of EPE

 -- Row 13 -----------------------------------
  Binding Name = MarginStatus
  Binding = value set
  Reference = valueset-nehta-involved-notinvolved-indeterminate
  Definition = A code from a single selection value to indicate the involvement of the margin status

 -- Row 14 -----------------------------------
  Binding Name = MarginLocation
  Binding = value set
  Reference = valueset-nehta-prostate-rad-tumour-locations
  Definition = A code from a multi select value list (select all that apply) for location(s) on the invovled margins

 -- Row 15 -----------------------------------
  Binding Name = MarginPositivity
  Binding = value set
  Reference = valueset-nehta-prostate-rad-margin-positivity
  Definition = A code from a multi select value list (select all that apply) for the type of margin positivity

 -- Row 16 -----------------------------------
  Binding Name = SeminalVesiclesMicro
  Binding = value set
  Reference = valueset-nehta-involved-notinvolved-na
  Definition = A code from a single selection value to indicate the involvement of the seminal vesicles

 -- Row 17 -----------------------------------
  Binding Name = SeminalVesiclesSide
  Binding = value set
  Reference = valueset-nehta-laterality
  Definition = A code from a single selection value to indicate the side of the seminal vesicles

 -- Row 18 -----------------------------------
  Binding Name = BladderNeck
  Binding = value set
  Reference = valueset-nehta-involved-notinvolved-na
  Definition = A code from a single selection value to indicate the involvement of the bladder neck

 -- Row 19 -----------------------------------
  Binding Name = LymphovascularInvasion
  Binding = value set
  Reference = valueset-nehta-notidentified-present-indeterminate
  Definition = A code from a single selection value to indicate the extent of lymphovascular invasion

 -- Row 20 -----------------------------------
  Binding Name = TumourStageT
  Binding = value set
  Reference = valueset-nehta-prostate-rad-tumour-stage-t
  Definition = A code that records primary tumour stage T

 -- Row 21 -----------------------------------
  Binding Name = TumourStageN
  Binding = value set
  Reference = valueset-nehta-prostate-rad-tumour-stage-n
  Definition = A code that records regional lymph nodes stage N

 -- Row 22 -----------------------------------
  Binding Name = TumourStageM
  Binding = value set
  Reference = valueset-nehta-prostate-rad-tumour-stage-m
  Definition = A code that records distant metastasis stage M

=== Sheet Invariants =====================================

 -- Row 1 -----------------------------------
  Id = 01
  Context = Prostate.macro.lymphNodes
  English = If lymph nodes are present consider recording G2.20 (laterality & site(s) and numbers of lymph nodes)
  XPath = not(@value = \'present\') or exists(f:lymphNodes.laterality)

 -- Row 2 -----------------------------------
  Id = 02
  Context = Prostate.micro.tumourType
  English = If the histological tumour type is other, then record the other type.
  XPath = not(@value = \'other\') or exists(f:tumourType.other)

 -- Row 3 -----------------------------------
  Id = 03
  Context = Prostate.micro.tumourType
  English = If the histological tumour type is Adenocarcinoma (Acinar variant eg foamy, pseudohyperplastic), then record the variant.
  XPath = not(@value = \'acinar_variant\') or exists(f:tumourType.acinarVariant)

 -- Row 4 -----------------------------------
  Id = 04
  Context = Prostate.micro.tumourLocation.otherNodules
  English = If there are other nodules >10mm in diameter then record the locations in quadrant and plane.
  XPath = not(@value = \'present\') or  (exists(f:describe) or exists(f:plane))

 -- Row 5 -----------------------------------
  Id = 05
  Context = Prostate.micro.extraprostaticExtension
  English = If an extraprostatic extension is present, then record the extent and consider recording the locations(s) of the EPE.
  XPath = not(@value = \'present\') or exists(f:extraprostaticExtension.extent)

 -- Row 6 -----------------------------------
  Id = 06
  Context = Prostate.micro.extraprostaticExtension.locations
  English = If the location of the extraprostatic extension is other, then record the record the other  locations(s) of the EPE.
  XPath = not(@value = \'other\') or exists(f:locations.other)

 -- Row 7 -----------------------------------
  Id = 07
  Context = Prostate.micro.marginStatus.location
  English = If the margin status is involved, the record the location(s) and optionally the extent; the Gleason score at the margin and the type of positivity.
  XPath = not(@value = \'involved\') or exists(f:location.other)

 -- Row 8 -----------------------------------
  Id = 08
  Context = Prostate.micro.seminalVesicles
  English = If the seminal vesicles are involved, then record the side.
  XPath = not(@value = \'involved\') or exists(f:seminalVesicles.side)

 -- Row 9 -----------------------------------
  Id = 09
  Context = Prostate.macro.lymphNodes
  English = If lymph nodes are present record S3.07 lymph node status.
  XPath = not(@value = \'present\') or exists(f:Prostate.micro.lymphNodeStatus.number)

 -- Row 10 -----------------------------------
  Id = 10
  Context = Prostate.micro.lymphNodeStatus.numberPositive
  English = If there are positive lymph nodes consider recording G3.09 laterality and G3.10 maximum dimension of largest deposit.
  XPath = not(@value) or (exists(f:laterality)  or exists (f:maxDimension))

 -- Row 11 -----------------------------------
  Id = 11
  Context = Prostate.micro.lymphNodeStatus.laterality
  English = If there are positive lymph nodes with indicated laterality consider recording the site(s) of the involved nodes.
  XPath = not(@value) or exists(f:laterality)

=== Sheet Data Elements =====================================

 -- Row 1 -----------------------------------
  Element = Prostate
  Type = DomainResource
  Short Label = Prostate
  Definition = Prostate cancer
  Logical Mapping = dr := DiagnosticReport
  CAP Code = 28992.1000043

 -- Row 2 -----------------------------------
  Element = Prostate.subject
  Card. = 1..1
  Aliases = Patient
  Summary = Y
  Type = Reference(Patient|Group)
  Short Label = The subject of the report, usually, but not always, the patient
  Definition = The subject of the report. Usually, but not always, this is a patient. However diagnostic services also perform analyses on specimens collected from a variety of other sources.
  Logical Mapping = dr.subject
  v2 Mapping = PID-3-Patient ID List (no V2 mapping for Group or Device)
  RIM Mapping = participation[typeCode=SBJ]
  To Do = Need to made cardinality [1..1] as the build initially gets errors with this setting.

 -- Row 3 -----------------------------------
  Element = Prostate.requester
  Card. = 0..1
  Summary = Y
  Type = Reference(Practitioner)
  Short Label = Who ordered the test
  Definition = The practitioner that holds legal responsibility for ordering the investigation
  Logical Mapping = !req := dr.request->DiagnosticOrder; req[orderer := $value]
  RIM Mapping = participation[typeCode=AUT].role
  To Do = Need to made cardinality [1..1] as the build initially gets errors with this setting.

 -- Row 4 -----------------------------------
  Element = Prostate.performer
  Card. = 0..1
  Aliases = Laboratory, Service, Practitioner, Department, Company
  Summary = Y
  Type = Reference(Practitioner|Organization)
  Short Label = Responsible Diagnostic Service
  Definition = The diagnostic service that is responsible for issuing the report
  Requirements = Need to know whom to contact if there are queries about the results. Also may need to track the source of reports for secondary data analysis
  Comments = This is not necessarily the source of the atomic data items - it is the entity that takes responsibility for the clinical report.
  Logical Mapping = dr[performer := $value]
  v2 Mapping = PRT-8-Participation Organization (where this PRT-4-Participation = \"PO\")
  RIM Mapping = participation[typeCode=AUT].role[classCode=ASSIGN].scoper
  To Do = Need to made cardinality [1..1] as the build initially gets errors with this setting.

 -- Row 5 -----------------------------------
  Element = Prostate.preAnalytic
  Card. = 0..1
  Type = string
  Short Label = Pre Analytic
  Definition = Pre Analytic component - information collection prior to specimen receipt at laboratory.
  Comments = This is just a group/section header and is not a result field
  Logical Mapping = req := dr.request->DiagnosticOrder; req[orderer := $value]
  CAP Code = 28592.1000043

 -- Row 6 -----------------------------------
  Element = Prostate.preAnalytic.clinicalInformation
  Card. = 0..1
  Type = string
  Short Label = Clinical information
  Definition = Clinical information provided on request form
  Logical Mapping = req.reason[text := $value]
  CAP Code = 28589.1000043

 -- Row 7 -----------------------------------
  Element = Prostate.preAnalytic.surgicalProcedure
  Card. = 0..1
  Type = string
  Short Label = Surgical Procedure
  Definition = Surgical Procedure
  Logical Mapping = sp.text
  CAP Code = 28993.1000043

 -- Row 8 -----------------------------------
  Element = Prostate.preAnalytic.natureOfSpecimen
  Card. = 0..1
  Type = string
  Short Label = Nature of specimen
  Definition = Nature of the specimen
  Logical Mapping = sp := dr.specimen->Specimen; sp[type := $value]
  CAP Code = 28994.1000043

 -- Row 9 -----------------------------------
  Element = Prostate.preAnalytic.clinicalHistory
  Card. = 0..*
  Type = string
  Short Label = Clinical history
  Definition = Clinical history (including\nGleason grade and score of\nprevious specimens)
  Logical Mapping = req.reason[text := $value]
  CAP Code = 28995.1000043

 -- Row 10 -----------------------------------
  Element = Prostate.preAnalytic.previousTherapy
  Card. = 0..1
  Type = string
  Short Label = Previous therapy
  Definition = Previous therapy
  Logical Mapping = req.supportingInformation -> Observation[code := %map-codes; value[x] := $value]
  CAP Code = 29002.1000043

 -- Row 11 -----------------------------------
  Element = Prostate.preAnalytic.psa
  Card. = 0..*
  Type = SimpleQuantity
  Short Label = Pre-biopsy serum PSA
  Definition = Pre-biopsy serum Prostate Specific Antigen (PSA)
  Requirements = Units in ng/|mL
  Logical Mapping = dr.result[text := $value]
  CAP Code = 29003.1000043

 -- Row 12 -----------------------------------
  Element = Prostate.preAnalytic.stagingInfo
  Card. = 0..1
  Type = string
  Short Label = Relevant clinical information for\nclinicopathological staging
  Definition = Relevant clinical information for\nclinicopathological staging.
  Logical Mapping = si.text
  CAP Code = 29006.1000043

 -- Row 13 -----------------------------------
  Element = Prostate.preAnalytic.pathologyAccessionNumber
  Card. = 0..1
  Type = string
  Short Label = Pathology number
  Definition = Pathology accession number
  Logical Mapping = dr[identifier := $value]
  CAP Code = 29013.1000043

 -- Row 14 -----------------------------------
  Element = Prostate.preAnalytic.principalClinician
  Card. = 0..1
  Type = string
  Short Label = Principal clinician
  Definition = Principal clinician
  Logical Mapping = Practitioner.name[text := $value]
  CAP Code = 29014.1000043

 -- Row 15 -----------------------------------
  Element = Prostate.preAnalytic.comments
  Card. = 0..1
  Type = string
  Short Label = Comments
  Definition = Comments
  Logical Mapping = req.note[text := $value]
  CAP Code = 29015.1000043

 -- Row 16 -----------------------------------
  Element = Prostate.macro
  Card. = 0..1
  Type = string
  Short Label = Macroscopy
  Definition = Macroscopic findings
  Comments = This is just a group/section header and is not a result field
  Logical Mapping = macro := dr.result->Observation[code := %map-codes]
  CAP Code = 28858.1000043

 -- Row 17 -----------------------------------
  Element = Prostate.macro.specimenWeight
  Card. = 1..1
  Type = SimpleQuantity
  Short Label = Specimen weight
  Definition = Specimen weight (ie Prostate\nwithout seminal vesicles)
  Requirements = measurement in g.
  Logical Mapping = sp1 := dr.specimen->Specimen; sp1.collection[quantity := $value]
  CAP Code = 28865.1000043

 -- Row 18 -----------------------------------
  Element = Prostate.macro.specimenDimensions
  Card. = 0..1
  Type = string
  Short Label = Specimen dimensions
  Definition = Specimen dimensions (prostate)
  Requirements = measured: __ x __ x __ mm
  Logical Mapping = macro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 29016.1000043
  To Do = Ask GG how to have dismensions in a qualntity value data type or just use string??

 -- Row 19 -----------------------------------
  Element = Prostate.macro.seminalVesicles
  Card. = 1..1
  Type = code
  Binding = SeminalVesiclesMacro
  Short Label = Seminal vesicles
  Definition = Seminal Vesicles
  Logical Mapping = macro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28513.1000043

 -- Row 20 -----------------------------------
  Element = Prostate.macro.lymphNodes
  Card. = 1..1
  Inv. = 01,09
  Type = code
  Binding = LymphNodes
  Short Label = Lymph nodes
  Definition = If lymph nodes are received, then they should be recorded.
  Requirements = Conditional:\nIf received, record the number of nodes
  Logical Mapping = macro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28866.1000043

 -- Row 21 -----------------------------------
  Element = Prostate.macro.lymphNodes.laterality
  Card. = 0..1
  Type = code
  Binding = LymphNodesLaterality
  Short Label = Lymph nodes
  Definition = If lymph nodes are received, then they should be recorded.
  Requirements = Conditional:\nIf received, record the number of nodes
  Logical Mapping = macro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 29023.1000043

 -- Row 22 -----------------------------------
  Element = Prostate.macro.lymphNodes.siteAndNoLymphNodes
  Card. = 0..*
  Type = string
  Short Label = Site(s) and numbers of lymph\nnodes
  Definition = Site(s) and numbers of lymph\nnodes
  Requirements = Note that the site and number of LNs for that site may need to be repeated for each site received.
  Logical Mapping = macro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 29029.1000043
  To Do = Ask GG how to represent this in a data type or just a string/text.

 -- Row 23 -----------------------------------
  Element = Prostate.macro.blockIdentificationKey
  Card. = 0..1
  Type = string
  Short Label = Block identification key
  Definition = Block identification key
  Logical Mapping = macro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 29031.1000043

 -- Row 24 -----------------------------------
  Element = Prostate.macro.otherMacroComments
  Card. = 0..1
  Type = string
  Short Label = Other macroscopic comments
  Definition = A descriptive or narrative field should be provided to record any macroscopic information that is not recorded in the above standards and guidelines, and that would normally form part of the macroscopic description.
  Logical Mapping = macro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 29032.1000043

 -- Row 25 -----------------------------------
  Element = Prostate.micro
  Card. = 0..1
  Type = string
  Short Label = Microscopy
  Definition = Microscopy of the sample
  Comments = This is just a group/section header and is not a result field
  Logical Mapping = micro := dr.result->Observation[code := %map-codes]
  CAP Code = 28869.1000043

 -- Row 26 -----------------------------------
  Element = Prostate.micro.tumourType
  Card. = 1..*
  Inv. = 02,03
  Type = code
  Binding = TumourType
  Short Label = Tumour type
  Definition = Tumour type
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28870.1000043

 -- Row 27 -----------------------------------
  Element = Prostate.micro.tumourType.other
  Card. = 0..*
  Type = string
  Short Label = Other tumour type
  Definition = Other tumour type
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = Field wasn\'t in protocol but should have been!!

 -- Row 28 -----------------------------------
  Element = Prostate.micro.tumourType.acinarVariant
  Card. = 0..1
  Type = string
  Short Label = Acinar variant
  Definition = Acinar variant
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = ???

 -- Row 29 -----------------------------------
  Element = Prostate.micro.tumourLocation
  Card. = 0..1
  Type = string
  Short Label = Tumour location
  Definition = Tumour location
  Comments = This is just a group/section header and is not a result field
  Logical Mapping = micro := BodySite[code := $value]
  CAP Code = 28271.1000043

 -- Row 30 -----------------------------------
  Element = Prostate.micro.tumourLocation.quadrant
  Card. = 0..1
  Inv. = 04
  Type = code
  Binding = TumourLocationQuadrant
  Short Label = Largest nodule located by\nquadrant
  Definition = Largest nodule located by\nquadrant
  Requirements = Single selection value list.
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28272.1000043

 -- Row 31 -----------------------------------
  Element = Prostate.micro.tumourLocation.plane
  Card. = 0..1
  Type = code
  Binding = TumourLocationPlane
  Short Label = Largest nodule located by\nquadrant
  Definition = Largest nodule located by\nquadrant
  Requirements = Single selection value list.
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28469.1000043

 -- Row 32 -----------------------------------
  Element = Prostate.micro.tumourLocation.otherNodules
  Card. = 0..1
  Type = code
  Binding = TumourLocationOtherNodules
  Short Label = Other nodules >10mm in\ndiameter
  Definition = Other nodules >10mm in\ndiameter
  Requirements = Single selection value list.
  Comments = If present, record the locations in quadrant and plane
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]

 -- Row 33 -----------------------------------
  Element = Prostate.micro.tumourLocation.otherNodules.quadrant
  Card. = 0..1
  Type = code
  Binding = TumourLocationOtherNodulesQuadrant
  Short Label = Other nodules - locations by quadrant
  Definition = Other nodules - locations by quadrant
  Requirements = Multi selection value list.
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28487.1000043

 -- Row 34 -----------------------------------
  Element = Prostate.micro.tumourLocation.otherNodules.plane
  Card. = 0..1
  Type = code
  Binding = TumourLocationOtherNodulesPlane
  Short Label = Other nodules - locations by plane
  Definition = Other nodules - locations by plane
  Requirements = Multi selection value list.
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28497.1000043

 -- Row 35 -----------------------------------
  Element = Prostate.micro.intraglandularExtent
  Card. = 0..1
  Type = SimpleQuantity
  Short Label = Intraglandular extent
  Definition = Intraglandular extent
  Requirements = Numeric:  __%
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28906.1000043

 -- Row 36 -----------------------------------
  Element = Prostate.micro.sizeDominantNodule
  Card. = 0..1
  Type = SimpleQuantity
  Short Label = Maximum size of dominant nodule
  Definition = Maximum size of dominant\nnodule
  Requirements = Numeric:  __mm
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28908.1000043

 -- Row 37 -----------------------------------
  Element = Prostate.micro.histologicalGrade
  Card. = 1..1
  Type = string
  Short Label = Histological grade
  Definition = Histological grade
  Comments = This is just a group/section header and is not a result field
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28880.1000043

 -- Row 38 -----------------------------------
  Element = Prostate.micro.histologicalGrade.primary
  Card. = 0..1
  Type = SimpleQuantity
  Short Label = Primary Gleason grade
  Definition = Primary Gleason grade
  Requirements = Numeric: ___ (1-5)
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28503.1000043

 -- Row 39 -----------------------------------
  Element = Prostate.micro.histologicalGrade.secondary
  Card. = 0..1
  Type = SimpleQuantity
  Short Label = Secondary Gleason grade
  Definition = Secondary Gleason grade
  Requirements = Numeric: ___ (1-5)
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28504.1000043

 -- Row 40 -----------------------------------
  Element = Prostate.micro.histologicalGrade.tertiary
  Card. = 0..1
  Type = SimpleQuantity
  Short Label = Tertiary Gleason grade
  Definition = Tertiary Gleason grade
  Requirements = Numeric: ___ (3-5) or Not applicable
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28505.1000043

 -- Row 41 -----------------------------------
  Element = Prostate.micro.histologicalGrade.score
  Card. = 0..1
  Type = string
  Short Label = Gleason score
  Definition = Gleason score
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28903.1000043

 -- Row 42 -----------------------------------
  Element = Prostate.micro.extraprostaticExtension
  Card. = 1..1
  Inv. = 05
  Type = code
  Binding = ExtraprostaticExtension
  Short Label = Extraprostatic extension
  Definition = Extraprostatic extension
  Requirements = Single selection value list
  Comments = If present, record S3.04 extent.\nIf present, consider recording\nG3.04
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]

 -- Row 43 -----------------------------------
  Element = Prostate.micro.extraprostaticExtension.extent
  Card. = 1..1
  Type = code
  Binding = ExtraprostaticExtensionExtent
  Short Label = Extraprostatic extension - extent
  Definition = Extraprostatic extension - extent
  Requirements = Single selection value list
  Comments = If present, record S3.04 extent.\nIf present, consider recording\nG3.04
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28911.1000043

 -- Row 44 -----------------------------------
  Element = Prostate.micro.extraprostaticExtension.locations
  Card. = 0..*
  Inv. = 06
  Type = code
  Binding = ExtraprostaticExtensionLocations
  Short Label = Extraprostatic extension - location(s)
  Definition = Extraprostatic extension - locations of EPE
  Requirements = Single selection value list
  Comments = If other, specify the other\nlocation.
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28566.1000043

 -- Row 45 -----------------------------------
  Element = Prostate.micro.extraprostaticExtension.locations.other
  Card. = 0..1
  Type = string
  Short Label = Extraprostatic extension - other location
  Definition = Extraprostatic extension - other location
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]

 -- Row 46 -----------------------------------
  Element = Prostate.micro.marginStatus
  Card. = 1..1
  Inv. = 07
  Type = code
  Binding = MarginStatus
  Short Label = Margin status
  Definition = Margin status
  Requirements = Single selection value list:
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28929.1000043

 -- Row 47 -----------------------------------
  Element = Prostate.micro.marginStatus.location
  Card. = 0..*
  Type = code
  Binding = MarginLocation
  Short Label = Involved margin location
  Definition = Involved margin location
  Requirements = Multi select value list (select all that apply):
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28936.1000043

 -- Row 48 -----------------------------------
  Element = Prostate.micro.marginStatus.location.other
  Card. = 0..1
  Type = string
  Short Label = Margin status - other location
  Definition = Margin status - other location
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]

 -- Row 49 -----------------------------------
  Element = Prostate.micro.marginStatus.extent
  Card. = 0..1
  Type = SimpleQuantity
  Short Label = Involved margin extent
  Definition = Involved margin extent
  Requirements = Numeric: ___mm\nNotes:\nIf more than 1 positive margin, record the\ncummulative length.
  Comments = Conditional on margin\ninvolvement
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28511.1000043

 -- Row 50 -----------------------------------
  Element = Prostate.micro.marginStatus.score
  Card. = 0..1
  Type = SimpleQuantity
  Short Label = Gleason score at margin
  Definition = Gleason score at margin
  Requirements = Numeric: __\nNotes:\nIf more than 1 positive margin, record the\nhighest score
  Comments = Conditional on margin\ninvolvement
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28516.1000043

 -- Row 51 -----------------------------------
  Element = Prostate.micro.marginStatus.positivity
  Card. = 0..*
  Type = code
  Binding = MarginPositivity
  Short Label = Type of margin positivity
  Definition = Type of margin positivity
  Requirements = Multi select value list (select all that apply):
  Comments = Conditional on margin\ninvolvement
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28520.1000043

 -- Row 52 -----------------------------------
  Element = Prostate.micro.seminalVesicles
  Card. = 1..1
  Inv. = 08
  Type = code
  Binding = SeminalVesiclesMicro
  Short Label = Seminal vesicles
  Definition = Seminal vesicles
  Requirements = Single selection value list:
  Comments = If involved, record side
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28920.1000043

 -- Row 53 -----------------------------------
  Element = Prostate.micro.seminalVesicles.side
  Card. = 0..1
  Type = code
  Binding = SeminalVesiclesSide
  Short Label = Seminal vesicles - side
  Definition = Seminal vesicles - side
  Requirements = Single selection value list:
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28922.1000043

 -- Row 54 -----------------------------------
  Element = Prostate.micro.bladderNeck
  Card. = 0..1
  Type = code
  Binding = BladderNeck
  Short Label = Bladder neck
  Definition = Bladder neck
  Requirements = Single selection value list:
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28975.1000043

 -- Row 55 -----------------------------------
  Element = Prostate.micro.lymphNodeStatus
  Card. = 0..1
  Type = string
  Short Label = Lymph node status
  Definition = Lymph node status
  Comments = This is just a group/section header and is not a result field\nThis is conditional on receipt of LNs in S2.03.
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28965.1000043

 -- Row 56 -----------------------------------
  Element = Prostate.micro.lymphNodeStatus.number
  Card. = 0..1
  Type = SimpleQuantity
  Short Label = Number of lymph nodes\nexamined
  Definition = Number of lymph nodes\nexamined
  Requirements = Numeric: __
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28968.1000043

 -- Row 57 -----------------------------------
  Element = Prostate.micro.lymphNodeStatus.numberPositive
  Card. = 0..1
  Inv. = 10
  Type = SimpleQuantity
  Short Label = Number of positive lymph\nnodes
  Definition = Number of positive lymph\nnodes
  Requirements = Numeric: __
  Comments = If >0 consider recording G3.09 and G3.10.
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28970.1000043

 -- Row 58 -----------------------------------
  Element = Prostate.micro.lymphNodeStatus.laterality
  Card. = 0..1
  Inv. = 11
  Type = code
  Binding = LymphNodesLaterality
  Short Label = Lymph node laterality
  Definition = The laterality of any lymph node involvement should be recorded.
  Comments = Consider recording the site(s) of involved nodes
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28520.1000043

 -- Row 59 -----------------------------------
  Element = Prostate.micro.lymphNodeStatus.sitesInvolved
  Card. = 0..1
  Type = string
  Short Label = Site(s) of involved nodes
  Definition = Site(s) of involved nodes
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28524.1000043

 -- Row 60 -----------------------------------
  Element = Prostate.micro.lymphNodeStatus.maxDimension
  Card. = 0..1
  Type = SimpleQuantity
  Short Label = Maximum dimension of largest deposit
  Definition = The maximum dimension of the largest lymph node deposit may be\nrecorded.
  Requirements = Numeric: __
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28975.1000043

 -- Row 61 -----------------------------------
  Element = Prostate.micro.lymphNodeStatus.invasion
  Card. = 0..1
  Type = code
  Binding = LymphovascularInvasion
  Short Label = Lymphovascular invasion
  Definition = Lymphovascular invasion should be recorded.
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28946.1000043

 -- Row 62 -----------------------------------
  Element = Prostate.micro.addtionalComment
  Card. = 0..1
  Type = string
  Short Label = Additional microscopic comment
  Definition = Additional microscopic comment
  Logical Mapping = micro.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28526.1000043

 -- Row 63 -----------------------------------
  Element = Prostate.synthesisOverview
  Card. = 0..1
  Type = string
  Short Label = Synthesis and Overview
  Definition = Synthesis and Overview are to be recorded
  Comments = This is just a group/section header and is not a result field
  Logical Mapping = synthesis := dr.result->Observation[code := %map-codes]
  CAP Code = 28527.1000043

 -- Row 64 -----------------------------------
  Element = Prostate.synthesisOverview.tumourStage
  Card. = 0..1
  Type = string
  Short Label = Tumour stage
  Definition = Tumour stage is to be recorded
  Comments = This is just a sub-group/sub-section header and is not a result field
  Logical Mapping = synthesis.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28525.1000043

 -- Row 65 -----------------------------------
  Element = Prostate.synthesisOverview.tumourStage.t
  Card. = 1..1
  Type = code
  Binding = TumourStageT
  Short Label = Primary tumour (T)
  Definition = Primary Tumour stage T is to be recorded
  Requirements = Single selection value list.
  Comments = Notes:\n1. Invasion into the prostate apex or into\n(but not beyond) the prostate capsule is\nnot classified as T3, but as T2.\n* There is no pathologic T1 classification for\nradical prostatectomy specimens\n** Positive surgical margin should be\nindicated by an R1 descriptor (residual\nmicroscopic disease)
  Logical Mapping = synthesis.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28950.1000043

 -- Row 66 -----------------------------------
  Element = Prostate.synthesisOverview.tumourStage.n
  Card. = 1..1
  Type = code
  Binding = TumourStageN
  Short Label = Regional lymph nodes (N)
  Definition = Regional lymph nodes (N) is to be recorded
  Requirements = Single selection value list.
  Logical Mapping = synthesis.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28961.1000043

 -- Row 67 -----------------------------------
  Element = Prostate.synthesisOverview.tumourStage.m
  Card. = 1..1
  Type = code
  Binding = TumourStageM
  Short Label = Distant metastasis (M)
  Definition = Distant metastasis (M) is to be recorded
  Requirements = Single selection value list.
  Logical Mapping = synthesis.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28976.1000043

 -- Row 68 -----------------------------------
  Element = Prostate.synthesisOverview.tumourStage.stagingSystemDetails
  Card. = 1..1
  Type = string
  Short Label = Year and/or edition of staging system
  Definition = Year and/or edition of staging system is to be recorded
  Requirements = Numeric: year\nAND/OR\nText: Edition eg 1st, 2nd etc
  Logical Mapping = synthesis.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]

 -- Row 69 -----------------------------------
  Element = Prostate.synthesisOverview.diagnosticSummary
  Card. = 0..1
  Type = string
  Short Label = Diagnostic summary
  Definition = Diagnostic summary is to be recorded
  Requirements = Include:\na. specimen type\nb. tumour site\nc. Gleason score\nd. tumour stage\ne. whether or not the specimen margins are involved
  Logical Mapping = synthesis.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28533.1000043

 -- Row 70 -----------------------------------
  Element = Prostate.synthesisOverview.overarchingComment
  Card. = 0..1
  Type = string
  Short Label = Overarching comment
  Definition = Synthesis and overview overarching comment
  Requirements = Conditional
  Logical Mapping = synthesis.related[type:=\'has-member\'].target->Observation[code:=%map-codes; value[x] := $value]
  CAP Code = 28991.1000043
